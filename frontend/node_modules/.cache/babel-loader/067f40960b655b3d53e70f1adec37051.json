{"ast":null,"code":"var _jsxFileName = \"/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/PrivateRoutes.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isLoggedIn } from \"../../utils/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoutes = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  //const { isAuthenticated, isLoading } = useSelector(state => state.userLogin);\n  //console.log(\"Login \",state)\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this); // return <Route {...rest} render={(props) => ((!isLoggedIn()) ? <Redirect to=\"/login\" /> : <Component {...props} />)} />;\n};\n\n_c = PrivateRoutes;\nexport default PrivateRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/PrivateRoutes.js"],"names":["React","Route","Redirect","useSelector","useDispatch","isLoggedIn","PrivateRoutes","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAEA,MAAMC,aAAa,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AAC3D;AACA;AACA,sBAAO,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,iBAAW,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP,CAH2D,CAI3D;AACD,CALD;;KAAMJ,a;AAON,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isLoggedIn } from \"../../utils/helper\";\n\nconst PrivateRoutes = ({ component: Component, ...rest }) => {\n  //const { isAuthenticated, isLoading } = useSelector(state => state.userLogin);\n  //console.log(\"Login \",state)\n  return <Route {...rest} render={(props) => <Component {...props} />}/>\n  // return <Route {...rest} render={(props) => ((!isLoggedIn()) ? <Redirect to=\"/login\" /> : <Component {...props} />)} />;\n};\n\nexport default PrivateRoutes;"]},"metadata":{},"sourceType":"module"}