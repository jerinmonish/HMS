{"ast":null,"code":"import axios from \"axios\";\nimport * as constants from \"../actions/types\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const userRegistration = rgData => async dispatch => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n\n  try {\n    await axios.post('api/signup', rgData, {\n      headers: headers\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      }); // toast.success(\"Registration Success !\", {\n      //   position: toast.POSITION.TOP_CENTER\n      // });\n\n      return 1;\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    console.log(error.response); //var tempErr = []\n\n    if ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errors) {\n      Object.keys(error.response.data.errors).forEach(function (vals) {\n        //tempErr.push(error.response.data.errors[vals][0]);\n        toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n      });\n    } // if(error.response.data.errors.password[0]){\n    //   toast.error(error.response.data.errors.password[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // } else if(error.response.data.errors.email[0]){\n    //   toast.error(error.response.data.errors.email[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // }\n\n  }\n};","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js"],"names":["axios","constants","ToastContainer","toast","headers","userRegistration","rgData","dispatch","type","REGISTER_REQUEST","post","then","res","console","log","REGISTER_SUCCESS","error","REGISTER_ERROR","response","data","errors","Object","keys","forEach","vals","position","POSITION","TOP_CENTER"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAEA,MAAMC,OAAO,GAAG;AACd,YAAU,kBADI;AAEd,kBAAgB;AAFF,CAAhB;AAIA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,SAAS,CAACQ;AADT,GAAD,CAAR;;AAGA,MAAI;AACF,UAAMT,KAAK,CAACU,IAAN,CAAW,YAAX,EAAwBJ,MAAxB,EAA+B;AAACF,MAAAA,OAAO,EAAEA;AAAV,KAA/B,EACLO,IADK,CACCC,GAAD,IAAO;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,SAAS,CAACc;AADT,OAAD,CAAR,CAFW,CAKX;AACA;AACA;;AACA,aAAO,CAAP;AACD,KAVK,CAAN;AAWD,GAZD,CAYE,OAAOC,KAAP,EAAc;AAAA;;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,SAAS,CAACgB;AADT,KAAD,CAAR;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACE,QAAlB,EAJc,CAKd;;AACA,2BAAGF,KAAK,CAACE,QAAT,4EAAG,gBAAgBC,IAAnB,yDAAG,qBAAsBC,MAAzB,EAAgC;AAC9BC,MAAAA,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAAhC,EAAwCG,OAAxC,CAAgD,UAASC,IAAT,EAAe;AAC5D;AACArB,QAAAA,KAAK,CAACa,KAAN,CAAYA,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2BI,IAA3B,EAAiC,CAAjC,CAAZ,EAAiD;AAChDC,UAAAA,QAAQ,EAAEtB,KAAK,CAACuB,QAAN,CAAeC;AADuB,SAAjD;AAGF,OALD;AAMD,KAba,CAcd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACF,CAxCM","sourcesContent":["import axios from \"axios\";\nimport * as constants from \"../actions/types\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n}\nexport const userRegistration = (rgData) => async (dispatch) => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n  try {\n    await axios.post('api/signup',rgData,{headers: headers})\n    .then((res)=>{\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      });\n      // toast.success(\"Registration Success !\", {\n      //   position: toast.POSITION.TOP_CENTER\n      // });\n      return 1;\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    console.log(error.response);\n    //var tempErr = []\n    if(error.response?.data?.errors){\n      Object.keys(error.response.data.errors).forEach(function(vals) {\n         //tempErr.push(error.response.data.errors[vals][0]);\n         toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n      });\n    }\n    // if(error.response.data.errors.password[0]){\n    //   toast.error(error.response.data.errors.password[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // } else if(error.response.data.errors.email[0]){\n    //   toast.error(error.response.data.errors.email[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // }\n  }\n}"]},"metadata":{},"sourceType":"module"}