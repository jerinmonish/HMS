{"ast":null,"code":"import axios from \"axios\";\nimport * as constants from \"../actions/types\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const userRegistration = rgData => async dispatch => {\n  dispatch({\n    type: constants.REGISTER_REQUEST,\n    isLoading: true,\n    isAuthenticated: false\n  });\n\n  try {\n    await axios.post('api/signup', rgData, {\n      headers: headers\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS,\n        isLoading: false,\n        isAuthenticated: false\n      });\n      toast.success(\"Registration Success !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR,\n      isLoading: false,\n      isAuthenticated: false\n    });\n    console.log(error.response); //var tempErr = []\n\n    Object.keys(error.response.data.errors).forEach(function (vals) {\n      //tempErr.push(error.response.data.errors[vals][0]);\n      toast.error(error.response.data.errors[vals][0], {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }); // if(error.response.data.errors.password[0]){\n    //   toast.error(error.response.data.errors.password[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // } else if(error.response.data.errors.email[0]){\n    //   toast.error(error.response.data.errors.email[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // }\n  }\n};","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js"],"names":["axios","constants","ToastContainer","toast","headers","userRegistration","rgData","dispatch","type","REGISTER_REQUEST","isLoading","isAuthenticated","post","then","res","console","log","REGISTER_SUCCESS","success","position","POSITION","TOP_CENTER","error","REGISTER_ERROR","response","Object","keys","data","errors","forEach","vals"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,MAAMC,OAAO,GAAG;AACd,YAAU,kBADI;AAEd,kBAAgB;AAFF,CAAhB;AAIA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,SAAS,CAACQ,gBADT;AAEPC,IAAAA,SAAS,EAAE,IAFJ;AAGPC,IAAAA,eAAe,EAAC;AAHT,GAAD,CAAR;;AAMA,MAAI;AACF,UAAMX,KAAK,CAACY,IAAN,CAAW,YAAX,EAAwBN,MAAxB,EAA+B;AAACF,MAAAA,OAAO,EAAEA;AAAV,KAA/B,EACLS,IADK,CACCC,GAAD,IAAO;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,SAAS,CAACgB,gBADT;AAEPP,QAAAA,SAAS,EAAE,KAFJ;AAGPC,QAAAA,eAAe,EAAC;AAHT,OAAD,CAAR;AAKAR,MAAAA,KAAK,CAACe,OAAN,CAAc,wBAAd,EAAwC;AACtCC,QAAAA,QAAQ,EAAEhB,KAAK,CAACiB,QAAN,CAAeC;AADa,OAAxC;AAGD,KAXK,CAAN;AAYD,GAbD,CAaE,OAAOC,KAAP,EAAc;AACdf,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,SAAS,CAACsB,cADT;AAEPb,MAAAA,SAAS,EAAE,KAFJ;AAGPC,MAAAA,eAAe,EAAC;AAHT,KAAD,CAAR;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACE,QAAlB,EANc,CAOd;;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACE,QAAN,CAAeG,IAAf,CAAoBC,MAAhC,EAAwCC,OAAxC,CAAgD,UAASC,IAAT,EAAe;AAC1D;AACA3B,MAAAA,KAAK,CAACmB,KAAN,CAAYA,KAAK,CAACE,QAAN,CAAeG,IAAf,CAAoBC,MAApB,CAA2BE,IAA3B,EAAiC,CAAjC,CAAZ,EAAiD;AAChDX,QAAAA,QAAQ,EAAEhB,KAAK,CAACiB,QAAN,CAAeC;AADuB,OAAjD;AAGJ,KALD,EARc,CAcd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,CA5CM","sourcesContent":["import axios from \"axios\";\nimport * as constants from \"../actions/types\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n}\nexport const userRegistration = (rgData) => async (dispatch) => {\n  dispatch({\n    type: constants.REGISTER_REQUEST,\n    isLoading: true,\n    isAuthenticated:false,\n  });\n\n  try {\n    await axios.post('api/signup',rgData,{headers: headers})\n    .then((res)=>{\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS,\n        isLoading: false,\n        isAuthenticated:false,\n      });\n      toast.success(\"Registration Success !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR,\n      isLoading: false,\n      isAuthenticated:false,\n    });\n    console.log(error.response);\n    //var tempErr = []\n    Object.keys(error.response.data.errors).forEach(function(vals) {\n         //tempErr.push(error.response.data.errors[vals][0]);\n         toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n    });\n    // if(error.response.data.errors.password[0]){\n    //   toast.error(error.response.data.errors.password[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // } else if(error.response.data.errors.email[0]){\n    //   toast.error(error.response.data.errors.email[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // }\n  }\n}"]},"metadata":{},"sourceType":"module"}