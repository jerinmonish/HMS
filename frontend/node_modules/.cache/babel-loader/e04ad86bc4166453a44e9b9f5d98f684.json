{"ast":null,"code":"import { useLayoutEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { getWidth } from '../helpers/style';\nexport function useFoutDetector(getElements, handleFout) {\n  useLayoutEffect(function () {\n    var elements = getElements();\n    if (!elements) return;\n    return setupWidthChangeAfterRenderListener(elements, handleFout);\n  });\n}\n\nfunction setupWidthChangeAfterRenderListener(elements, handleWidthChangeAfterRender) {\n  var getInitialWidth = createInitialWidthProvider(elements);\n\n  var hasWidthChanged = function (element) {\n    return isSignificantDifference(getInitialWidth(element), getWidth(element));\n  };\n\n  return setupResizeObserver(elements, function (maybeResizedElements) {\n    if (maybeResizedElements.some(hasWidthChanged)) {\n      handleWidthChangeAfterRender();\n    }\n  });\n}\n\nfunction createInitialWidthProvider(elements) {\n  var initialWidths = elements.map(getWidth);\n  return function getInitialWidth(element) {\n    var index = elements.indexOf(element);\n    return initialWidths[index];\n  };\n}\n\nfunction setupResizeObserver(elements, handleElementsResized) {\n  var resizeObserver = new ResizeObserver(function (entries) {\n    var elements = entries.map(getTargetElement);\n    handleElementsResized(elements);\n  });\n  elements.forEach(function (element) {\n    return resizeObserver.observe(element);\n  });\n  return function () {\n    return resizeObserver.disconnect();\n  };\n}\n\nfunction getTargetElement(entry) {\n  return entry.target;\n}\n\nfunction isSignificantDifference(width1, width2) {\n  return Math.abs(width1 - width2) > 0.5;\n}","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/node_modules/react-responsive-pagination/lib/hooks/useFoutDetector.js"],"names":["useLayoutEffect","ResizeObserver","getWidth","useFoutDetector","getElements","handleFout","elements","setupWidthChangeAfterRenderListener","handleWidthChangeAfterRender","getInitialWidth","createInitialWidthProvider","hasWidthChanged","element","isSignificantDifference","setupResizeObserver","maybeResizedElements","some","initialWidths","map","index","indexOf","handleElementsResized","resizeObserver","entries","getTargetElement","forEach","observe","disconnect","entry","target","width1","width2","Math","abs"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,UAAtC,EAAkD;AACrDL,EAAAA,eAAe,CAAC,YAAY;AACxB,QAAIM,QAAQ,GAAGF,WAAW,EAA1B;AACA,QAAI,CAACE,QAAL,EACI;AACJ,WAAOC,mCAAmC,CAACD,QAAD,EAAWD,UAAX,CAA1C;AACH,GALc,CAAf;AAMH;;AACD,SAASE,mCAAT,CAA6CD,QAA7C,EAAuDE,4BAAvD,EAAqF;AACjF,MAAIC,eAAe,GAAGC,0BAA0B,CAACJ,QAAD,CAAhD;;AACA,MAAIK,eAAe,GAAG,UAAUC,OAAV,EAAmB;AACrC,WAAOC,uBAAuB,CAACJ,eAAe,CAACG,OAAD,CAAhB,EAA2BV,QAAQ,CAACU,OAAD,CAAnC,CAA9B;AACH,GAFD;;AAGA,SAAOE,mBAAmB,CAACR,QAAD,EAAW,UAAUS,oBAAV,EAAgC;AACjE,QAAIA,oBAAoB,CAACC,IAArB,CAA0BL,eAA1B,CAAJ,EAAgD;AAC5CH,MAAAA,4BAA4B;AAC/B;AACJ,GAJyB,CAA1B;AAKH;;AACD,SAASE,0BAAT,CAAoCJ,QAApC,EAA8C;AAC1C,MAAIW,aAAa,GAAGX,QAAQ,CAACY,GAAT,CAAahB,QAAb,CAApB;AACA,SAAO,SAASO,eAAT,CAAyBG,OAAzB,EAAkC;AACrC,QAAIO,KAAK,GAAGb,QAAQ,CAACc,OAAT,CAAiBR,OAAjB,CAAZ;AACA,WAAOK,aAAa,CAACE,KAAD,CAApB;AACH,GAHD;AAIH;;AACD,SAASL,mBAAT,CAA6BR,QAA7B,EAAuCe,qBAAvC,EAA8D;AAC1D,MAAIC,cAAc,GAAG,IAAIrB,cAAJ,CAAmB,UAAUsB,OAAV,EAAmB;AACvD,QAAIjB,QAAQ,GAAGiB,OAAO,CAACL,GAAR,CAAYM,gBAAZ,CAAf;AACAH,IAAAA,qBAAqB,CAACf,QAAD,CAArB;AACH,GAHoB,CAArB;AAIAA,EAAAA,QAAQ,CAACmB,OAAT,CAAiB,UAAUb,OAAV,EAAmB;AAAE,WAAOU,cAAc,CAACI,OAAf,CAAuBd,OAAvB,CAAP;AAAyC,GAA/E;AACA,SAAO,YAAY;AAAE,WAAOU,cAAc,CAACK,UAAf,EAAP;AAAqC,GAA1D;AACH;;AACD,SAASH,gBAAT,CAA0BI,KAA1B,EAAiC;AAC7B,SAAOA,KAAK,CAACC,MAAb;AACH;;AACD,SAAShB,uBAAT,CAAiCiB,MAAjC,EAAyCC,MAAzC,EAAiD;AAC7C,SAAOC,IAAI,CAACC,GAAL,CAASH,MAAM,GAAGC,MAAlB,IAA4B,GAAnC;AACH","sourcesContent":["import { useLayoutEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { getWidth } from '../helpers/style';\nexport function useFoutDetector(getElements, handleFout) {\n    useLayoutEffect(function () {\n        var elements = getElements();\n        if (!elements)\n            return;\n        return setupWidthChangeAfterRenderListener(elements, handleFout);\n    });\n}\nfunction setupWidthChangeAfterRenderListener(elements, handleWidthChangeAfterRender) {\n    var getInitialWidth = createInitialWidthProvider(elements);\n    var hasWidthChanged = function (element) {\n        return isSignificantDifference(getInitialWidth(element), getWidth(element));\n    };\n    return setupResizeObserver(elements, function (maybeResizedElements) {\n        if (maybeResizedElements.some(hasWidthChanged)) {\n            handleWidthChangeAfterRender();\n        }\n    });\n}\nfunction createInitialWidthProvider(elements) {\n    var initialWidths = elements.map(getWidth);\n    return function getInitialWidth(element) {\n        var index = elements.indexOf(element);\n        return initialWidths[index];\n    };\n}\nfunction setupResizeObserver(elements, handleElementsResized) {\n    var resizeObserver = new ResizeObserver(function (entries) {\n        var elements = entries.map(getTargetElement);\n        handleElementsResized(elements);\n    });\n    elements.forEach(function (element) { return resizeObserver.observe(element); });\n    return function () { return resizeObserver.disconnect(); };\n}\nfunction getTargetElement(entry) {\n    return entry.target;\n}\nfunction isSignificantDifference(width1, width2) {\n    return Math.abs(width1 - width2) > 0.5;\n}\n"]},"metadata":{},"sourceType":"module"}