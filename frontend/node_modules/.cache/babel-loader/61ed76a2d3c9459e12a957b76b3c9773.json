{"ast":null,"code":"import axios from \"axios\";\nimport * as constants from \"../actions/types\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const userRegistration = rgData => async dispatch => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n\n  try {\n    await axios.post('api/signup', rgData, {\n      headers: headers\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      });\n      toast.success(\"Registration Success !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n      history.push('/login');\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    console.log(error.response); //var tempErr = []\n\n    Object.keys(error.response.data.errors).forEach(function (vals) {\n      //tempErr.push(error.response.data.errors[vals][0]);\n      toast.error(error.response.data.errors[vals][0], {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }); // if(error.response.data.errors.password[0]){\n    //   toast.error(error.response.data.errors.password[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // } else if(error.response.data.errors.email[0]){\n    //   toast.error(error.response.data.errors.email[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // }\n  }\n};","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js"],"names":["axios","constants","ToastContainer","toast","useHistory","headers","userRegistration","rgData","dispatch","type","REGISTER_REQUEST","post","then","res","console","log","REGISTER_SUCCESS","success","position","POSITION","TOP_CENTER","history","push","error","REGISTER_ERROR","response","Object","keys","data","errors","forEach","vals"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,OAAO,GAAG;AACd,YAAU,kBADI;AAEd,kBAAgB;AAFF,CAAhB;AAIA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER,SAAS,CAACS;AADT,GAAD,CAAR;;AAIA,MAAI;AACF,UAAMV,KAAK,CAACW,IAAN,CAAW,YAAX,EAAwBJ,MAAxB,EAA+B;AAACF,MAAAA,OAAO,EAAEA;AAAV,KAA/B,EACLO,IADK,CACCC,GAAD,IAAO;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,SAAS,CAACe;AADT,OAAD,CAAR;AAGAb,MAAAA,KAAK,CAACc,OAAN,CAAc,wBAAd,EAAwC;AACtCC,QAAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC;AADa,OAAxC;AAGAC,MAAAA,OAAO,CAACC,IAAR,CAAc,QAAd;AACD,KAVK,CAAN;AAWD,GAZD,CAYE,OAAOC,KAAP,EAAc;AACdf,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,SAAS,CAACuB;AADT,KAAD,CAAR;AAGAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACE,QAAlB,EAJc,CAKd;;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACE,QAAN,CAAeG,IAAf,CAAoBC,MAAhC,EAAwCC,OAAxC,CAAgD,UAASC,IAAT,EAAe;AAC1D;AACA5B,MAAAA,KAAK,CAACoB,KAAN,CAAYA,KAAK,CAACE,QAAN,CAAeG,IAAf,CAAoBC,MAApB,CAA2BE,IAA3B,EAAiC,CAAjC,CAAZ,EAAiD;AAChDb,QAAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC;AADuB,OAAjD;AAGJ,KALD,EANc,CAYd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,CAvCM","sourcesContent":["import axios from \"axios\";\nimport * as constants from \"../actions/types\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n}\nexport const userRegistration = (rgData) => async (dispatch) => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n\n  try {\n    await axios.post('api/signup',rgData,{headers: headers})\n    .then((res)=>{\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      });\n      toast.success(\"Registration Success !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n      history.push ('/login');\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    console.log(error.response);\n    //var tempErr = []\n    Object.keys(error.response.data.errors).forEach(function(vals) {\n         //tempErr.push(error.response.data.errors[vals][0]);\n         toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n    });\n    // if(error.response.data.errors.password[0]){\n    //   toast.error(error.response.data.errors.password[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // } else if(error.response.data.errors.email[0]){\n    //   toast.error(error.response.data.errors.email[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // }\n  }\n}"]},"metadata":{},"sourceType":"module"}