{"ast":null,"code":"import { useLayoutEffect, useRef } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nexport function useResizeNotifier(element, callback) {\n  var callBackRef = useRef(callback);\n  useLayoutEffect(function () {\n    callBackRef.current = callback;\n  }, [callback]);\n  useLayoutEffect(function () {\n    if (!element) return;\n    var resizeObserver = new ResizeObserver(withResizeLoopDetection(function () {\n      callBackRef.current();\n    }));\n    resizeObserver.observe(element);\n    return function () {\n      resizeObserver.disconnect();\n    };\n  }, [element]);\n}\n\nfunction withResizeLoopDetection(callback) {\n  return function (entries, resizeObserver) {\n    var elements = entries.map(function (entry) {\n      return entry.target;\n    });\n    var rectsBefore = elements.map(function (element) {\n      return element.getBoundingClientRect();\n    });\n    callback();\n    var rectsAfter = elements.map(function (element) {\n      return element.getBoundingClientRect();\n    });\n    var changedElements = elements.filter(function (_, i) {\n      return !areRectSizesEqual(rectsBefore[i], rectsAfter[i]);\n    });\n    changedElements.forEach(function (element) {\n      return unobserveUntilNextFrame(element, resizeObserver);\n    });\n  };\n}\n\nfunction unobserveUntilNextFrame(element, resizeObserver) {\n  resizeObserver.unobserve(element);\n  requestAnimationFrame(function () {\n    resizeObserver.observe(element);\n  });\n}\n\nfunction areRectSizesEqual(rect1, rect2) {\n  return rect1.width === rect2.width && rect1.height === rect2.height;\n}","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/node_modules/react-responsive-pagination/lib/hooks/useResizeNotifier.js"],"names":["useLayoutEffect","useRef","ResizeObserver","useResizeNotifier","element","callback","callBackRef","current","resizeObserver","withResizeLoopDetection","observe","disconnect","entries","elements","map","entry","target","rectsBefore","getBoundingClientRect","rectsAfter","changedElements","filter","_","i","areRectSizesEqual","forEach","unobserveUntilNextFrame","unobserve","requestAnimationFrame","rect1","rect2","width","height"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AACjD,MAAIC,WAAW,GAAGL,MAAM,CAACI,QAAD,CAAxB;AACAL,EAAAA,eAAe,CAAC,YAAY;AACxBM,IAAAA,WAAW,CAACC,OAAZ,GAAsBF,QAAtB;AACH,GAFc,EAEZ,CAACA,QAAD,CAFY,CAAf;AAGAL,EAAAA,eAAe,CAAC,YAAY;AACxB,QAAI,CAACI,OAAL,EACI;AACJ,QAAII,cAAc,GAAG,IAAIN,cAAJ,CAAmBO,uBAAuB,CAAC,YAAY;AACxEH,MAAAA,WAAW,CAACC,OAAZ;AACH,KAF8D,CAA1C,CAArB;AAGAC,IAAAA,cAAc,CAACE,OAAf,CAAuBN,OAAvB;AACA,WAAO,YAAY;AACfI,MAAAA,cAAc,CAACG,UAAf;AACH,KAFD;AAGH,GAVc,EAUZ,CAACP,OAAD,CAVY,CAAf;AAWH;;AACD,SAASK,uBAAT,CAAiCJ,QAAjC,EAA2C;AACvC,SAAO,UAAUO,OAAV,EAAmBJ,cAAnB,EAAmC;AACtC,QAAIK,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAUC,KAAV,EAAiB;AAAE,aAAOA,KAAK,CAACC,MAAb;AAAsB,KAArD,CAAf;AACA,QAAIC,WAAW,GAAGJ,QAAQ,CAACC,GAAT,CAAa,UAAUV,OAAV,EAAmB;AAAE,aAAOA,OAAO,CAACc,qBAAR,EAAP;AAAyC,KAA3E,CAAlB;AACAb,IAAAA,QAAQ;AACR,QAAIc,UAAU,GAAGN,QAAQ,CAACC,GAAT,CAAa,UAAUV,OAAV,EAAmB;AAAE,aAAOA,OAAO,CAACc,qBAAR,EAAP;AAAyC,KAA3E,CAAjB;AACA,QAAIE,eAAe,GAAGP,QAAQ,CAACQ,MAAT,CAAgB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAO,CAACC,iBAAiB,CAACP,WAAW,CAACM,CAAD,CAAZ,EAAiBJ,UAAU,CAACI,CAAD,CAA3B,CAAzB;AAA2D,KAA7F,CAAtB;AACAH,IAAAA,eAAe,CAACK,OAAhB,CAAwB,UAAUrB,OAAV,EAAmB;AACvC,aAAOsB,uBAAuB,CAACtB,OAAD,EAAUI,cAAV,CAA9B;AACH,KAFD;AAGH,GATD;AAUH;;AACD,SAASkB,uBAAT,CAAiCtB,OAAjC,EAA0CI,cAA1C,EAA0D;AACtDA,EAAAA,cAAc,CAACmB,SAAf,CAAyBvB,OAAzB;AACAwB,EAAAA,qBAAqB,CAAC,YAAY;AAC9BpB,IAAAA,cAAc,CAACE,OAAf,CAAuBN,OAAvB;AACH,GAFoB,CAArB;AAGH;;AACD,SAASoB,iBAAT,CAA2BK,KAA3B,EAAkCC,KAAlC,EAAyC;AACrC,SAAOD,KAAK,CAACE,KAAN,KAAgBD,KAAK,CAACC,KAAtB,IAA+BF,KAAK,CAACG,MAAN,KAAiBF,KAAK,CAACE,MAA7D;AACH","sourcesContent":["import { useLayoutEffect, useRef } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nexport function useResizeNotifier(element, callback) {\n    var callBackRef = useRef(callback);\n    useLayoutEffect(function () {\n        callBackRef.current = callback;\n    }, [callback]);\n    useLayoutEffect(function () {\n        if (!element)\n            return;\n        var resizeObserver = new ResizeObserver(withResizeLoopDetection(function () {\n            callBackRef.current();\n        }));\n        resizeObserver.observe(element);\n        return function () {\n            resizeObserver.disconnect();\n        };\n    }, [element]);\n}\nfunction withResizeLoopDetection(callback) {\n    return function (entries, resizeObserver) {\n        var elements = entries.map(function (entry) { return entry.target; });\n        var rectsBefore = elements.map(function (element) { return element.getBoundingClientRect(); });\n        callback();\n        var rectsAfter = elements.map(function (element) { return element.getBoundingClientRect(); });\n        var changedElements = elements.filter(function (_, i) { return !areRectSizesEqual(rectsBefore[i], rectsAfter[i]); });\n        changedElements.forEach(function (element) {\n            return unobserveUntilNextFrame(element, resizeObserver);\n        });\n    };\n}\nfunction unobserveUntilNextFrame(element, resizeObserver) {\n    resizeObserver.unobserve(element);\n    requestAnimationFrame(function () {\n        resizeObserver.observe(element);\n    });\n}\nfunction areRectSizesEqual(rect1, rect2) {\n    return rect1.width === rect2.width && rect1.height === rect2.height;\n}\n"]},"metadata":{},"sourceType":"module"}