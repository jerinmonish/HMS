{"ast":null,"code":"import { REGISTER_REQUEST, REGISTER_ERROR, REGISTER_SUCCESS } from \"../actions/types\";\nconst initialState = {\n  isLoading: false,\n  token: null,\n  error: \"\",\n  success: \"\"\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return { ...state,\n        isLoading: true\n      };\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        token: action.returnRegData,\n        success: \"token generated\"\n      };\n\n    case REGISTER_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: \"unable to register\"\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/reducers/userRegister.js"],"names":["REGISTER_REQUEST","REGISTER_ERROR","REGISTER_SUCCESS","initialState","isLoading","token","error","success","state","action","type","returnRegData"],"mappings":"AAAA,SACEA,gBADF,EAEEC,cAFF,EAGEC,gBAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAC,KADS;AAEnBC,EAAAA,KAAK,EAAC,IAFa;AAGnBC,EAAAA,KAAK,EAAC,EAHa;AAInBC,EAAAA,OAAO,EAAC;AAJW,CAArB;AAOA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKF,gBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,KAAK,EAACI,MAAM,CAACE,aAHR;AAILJ,QAAAA,OAAO,EAAC;AAJH,OAAP;;AAMF,SAAKN,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,KAAK,EAAC;AAHD,OAAP;;AAKF;AACE,aAAOE,KAAP;AApBJ;AAsBD","sourcesContent":["import {\n  REGISTER_REQUEST,\n  REGISTER_ERROR,\n  REGISTER_SUCCESS,\n} from \"../actions/types\";\n\nconst initialState = {\n  isLoading:false,\n  token:null,\n  error:\"\",\n  success:\"\"\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        token:action.returnRegData,\n        success:\"token generated\"\n      };\n    case REGISTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error:\"unable to register\"\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}