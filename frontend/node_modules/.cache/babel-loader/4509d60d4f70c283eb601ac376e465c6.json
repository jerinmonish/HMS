{"ast":null,"code":"import axios from \"axios\";\nimport * as constants from \"../actions/types\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const userRegistration = rgData => {\n  var _s = $RefreshSig$();\n\n  return _s(async dispatch => {\n    _s();\n\n    dispatch({\n      type: constants.REGISTER_REQUEST\n    });\n    let history = useHistory();\n\n    try {\n      await axios.post('api/signup', rgData, {\n        headers: headers\n      }).then(res => {\n        console.log(res);\n        dispatch({\n          type: constants.REGISTER_SUCCESS\n        }); // toast.success(\"Registration Success !\", {\n        //   position: toast.POSITION.TOP_CENTER\n        // });\n\n        history.push('/login');\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      dispatch({\n        type: constants.REGISTER_ERROR\n      });\n      console.log(error.response); //var tempErr = []\n\n      if ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errors) {\n        Object.keys(error.response.data.errors).forEach(function (vals) {\n          //tempErr.push(error.response.data.errors[vals][0]);\n          toast.error(error.response.data.errors[vals][0], {\n            position: toast.POSITION.TOP_CENTER\n          });\n        });\n      } // if(error.response.data.errors.password[0]){\n      //   toast.error(error.response.data.errors.password[0], {\n      //     position: toast.POSITION.TOP_CENTER\n      //   });\n      // } else if(error.response.data.errors.email[0]){\n      //   toast.error(error.response.data.errors.email[0], {\n      //     position: toast.POSITION.TOP_CENTER\n      //   });\n      // }\n\n    }\n  }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n};","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js"],"names":["axios","constants","ToastContainer","toast","useHistory","headers","userRegistration","rgData","dispatch","type","REGISTER_REQUEST","history","post","then","res","console","log","REGISTER_SUCCESS","push","error","REGISTER_ERROR","response","data","errors","Object","keys","forEach","vals","position","POSITION","TOP_CENTER"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,OAAO,GAAG;AACd,YAAU,kBADI;AAEd,kBAAgB;AAFF,CAAhB;AAIA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD;AAAA;;AAAA,YAAY,MAAOC,QAAP,IAAoB;AAAA;;AAC9DA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,SAAS,CAACS;AADT,KAAD,CAAR;AAGA,QAAIC,OAAO,GAAGP,UAAU,EAAxB;;AACA,QAAI;AACF,YAAMJ,KAAK,CAACY,IAAN,CAAW,YAAX,EAAwBL,MAAxB,EAA+B;AAACF,QAAAA,OAAO,EAAEA;AAAV,OAA/B,EACLQ,IADK,CACCC,GAAD,IAAO;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAER,SAAS,CAACgB;AADT,SAAD,CAAR,CAFW,CAKX;AACA;AACA;;AAEAN,QAAAA,OAAO,CAACO,IAAR,CAAc,QAAd;AACD,OAXK,CAAN;AAYD,KAbD,CAaE,OAAOC,KAAP,EAAc;AAAA;;AACdX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,SAAS,CAACmB;AADT,OAAD,CAAR;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,QAAlB,EAJc,CAKd;;AACA,6BAAGF,KAAK,CAACE,QAAT,4EAAG,gBAAgBC,IAAnB,yDAAG,qBAAsBC,MAAzB,EAAgC;AAC9BC,QAAAA,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAAhC,EAAwCG,OAAxC,CAAgD,UAASC,IAAT,EAAe;AAC5D;AACAxB,UAAAA,KAAK,CAACgB,KAAN,CAAYA,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2BI,IAA3B,EAAiC,CAAjC,CAAZ,EAAiD;AAChDC,YAAAA,QAAQ,EAAEzB,KAAK,CAAC0B,QAAN,CAAeC;AADuB,WAAjD;AAGF,SALD;AAMD,OAba,CAcd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACF,GA1C+B;AAAA,YAIhB1B,UAJgB;AAAA;AAAA,CAAzB","sourcesContent":["import axios from \"axios\";\nimport * as constants from \"../actions/types\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n}\nexport const userRegistration = (rgData) => async (dispatch) => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n  let history = useHistory ();\n  try {\n    await axios.post('api/signup',rgData,{headers: headers})\n    .then((res)=>{\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      });\n      // toast.success(\"Registration Success !\", {\n      //   position: toast.POSITION.TOP_CENTER\n      // });\n      \n      history.push ('/login');\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    console.log(error.response);\n    //var tempErr = []\n    if(error.response?.data?.errors){\n      Object.keys(error.response.data.errors).forEach(function(vals) {\n         //tempErr.push(error.response.data.errors[vals][0]);\n         toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n      });\n    }\n    // if(error.response.data.errors.password[0]){\n    //   toast.error(error.response.data.errors.password[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // } else if(error.response.data.errors.email[0]){\n    //   toast.error(error.response.data.errors.email[0], {\n    //     position: toast.POSITION.TOP_CENTER\n    //   });\n    // }\n  }\n}"]},"metadata":{},"sourceType":"module"}