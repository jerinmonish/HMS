{"ast":null,"code":"var _jsxFileName = \"/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js\";\nimport axios from \"axios\";\nimport * as constants from \"../actions/types\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\n/*export const userRegistration = (rgData) => async (dispatch) => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n  try {\n    await axios.post('api/signup',rgData,{headers: headers})\n    .then((res)=>{\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    //console.log(error.response);\n    //var tempErr = []\n    if(error.response?.data?.errors){\n      Object.keys(error.response.data.errors).forEach(function(vals) {\n         //tempErr.push(error.response.data.errors[vals][0]);\n         toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n      });\n    }\n  }\n}*/\n\nexport const userLogin = lgData => async dispatch => {\n  dispatch({\n    type: constants.LOGIN_REQUEST\n  });\n\n  try {\n    await axios.post('api/signin', lgData, {\n      headers: headers\n    }).then(lres => {\n      dispatch({\n        type: constants.LOGIN_SUCCESS,\n        returnLoginData: lres.data.token,\n        returnUserData: JSON.stringify(lres.data.user)\n      });\n      localStorage.setItem('user_token', lres.data.token);\n      localStorage.setItem(\"userDetails\", JSON.stringify({\n        'name': lres.data.user.name,\n        'email': lres.data.user.email,\n        'id': lres.data.user.id\n      }));\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.LOGIN_ERROR\n    });\n    toast.error(error.response.data.message, {\n      position: toast.POSITION.TOP_CENTER\n    });\n  }\n};\nexport const userLogout = lgtdata => async dispatch => {\n  dispatch({\n    type: constants.LOGOUT_REQUEST\n  });\n\n  try {\n    await axios.post('api/signout', lgtdata, {\n      headers: lgtdata\n    }).then(lgres => {\n      dispatch({\n        type: constants.LOGOUT_SUCCESS\n      });\n      localStorage.removeItem('user_token');\n      localStorage.removeItem('userDetails');\n      toast.error('Successfully Logged Out', {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this);\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.LOGOUT_ERROR\n    });\n    toast.error(error.repsonse.data.message, {\n      position: toast.POSITION.TOP_CENTER\n    });\n  }\n};","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js"],"names":["axios","constants","ToastContainer","toast","Redirect","headers","userLogin","lgData","dispatch","type","LOGIN_REQUEST","post","then","lres","LOGIN_SUCCESS","returnLoginData","data","token","returnUserData","JSON","stringify","user","localStorage","setItem","name","email","id","error","LOGIN_ERROR","response","message","position","POSITION","TOP_CENTER","userLogout","lgtdata","LOGOUT_REQUEST","lgres","LOGOUT_SUCCESS","removeItem","TOP_RIGHT","LOGOUT_ERROR","repsonse"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as constants from \"../actions/types\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Redirect } from 'react-router';\n\nvar headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n}\n/*export const userRegistration = (rgData) => async (dispatch) => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n  try {\n    await axios.post('api/signup',rgData,{headers: headers})\n    .then((res)=>{\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    //console.log(error.response);\n    //var tempErr = []\n    if(error.response?.data?.errors){\n      Object.keys(error.response.data.errors).forEach(function(vals) {\n         //tempErr.push(error.response.data.errors[vals][0]);\n         toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n      });\n    }\n  }\n}*/\n\nexport const userLogin = (lgData) => async (dispatch) => {\n  dispatch({\n    type: constants.LOGIN_REQUEST\n  });\n  try {\n    await axios.post('api/signin',lgData,{headers: headers})\n    .then((lres)=>{\n      dispatch({\n        type: constants.LOGIN_SUCCESS,\n        returnLoginData:lres.data.token,\n        returnUserData:JSON.stringify(lres.data.user),\n      });\n      localStorage.setItem('user_token',lres.data.token);\n      localStorage.setItem(\"userDetails\", JSON.stringify({'name':lres.data.user.name,'email':lres.data.user.email,'id':lres.data.user.id}));\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.LOGIN_ERROR\n    });\n    toast.error(error.response.data.message, {\n      position: toast.POSITION.TOP_CENTER\n    });\n  }\n}\n\nexport const userLogout = (lgtdata) => async (dispatch) => {\n  dispatch({\n    type: constants.LOGOUT_REQUEST\n  });\n  try {\n    await axios.post('api/signout',lgtdata,{headers: lgtdata})\n    .then((lgres)=> {\n      dispatch({\n        type: constants.LOGOUT_SUCCESS,\n      });\n      localStorage.removeItem('user_token');\n      localStorage.removeItem('userDetails');\n      toast.error('Successfully Logged Out', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n      return <Redirect to=\"/login\" />;\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.LOGOUT_ERROR\n    });\n    toast.error(error.repsonse.data.message, {\n      position: toast.POSITION.TOP_CENTER\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}