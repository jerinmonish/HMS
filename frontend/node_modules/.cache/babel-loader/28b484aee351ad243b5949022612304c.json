{"ast":null,"code":"var _jsxFileName = \"/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/AdminRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { isLoggedIn } from \"../../utils/helper\";\nimport NotFound from \"../../components/NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminRoutes = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const udData = useSelector(state => state.userLogin);\n  const uddDate = JSON.parse(udData.userDetails) ? JSON.parse(udData.userDetails) : JSON.parse(localStorage.getItem('userDetails'));\n\n  if ((uddDate === null || uddDate === void 0 ? void 0 : uddDate.user_type) === \"admin\") {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => isLoggedIn() || (udData === null || udData === void 0 ? void 0 : udData.isAuthenticated) ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 94\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 121\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/asdasd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(AdminRoutes, \"eb13mb6f7aHZBlYpM32Je/l0p5A=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoutes;\nexport default AdminRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoutes\");","map":{"version":3,"sources":["/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/AdminRoutes.js"],"names":["React","Route","Redirect","useSelector","isLoggedIn","NotFound","AdminRoutes","component","Component","rest","udData","state","userLogin","uddDate","JSON","parse","userDetails","localStorage","getItem","user_type","props","isAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AACA,MAAMC,WAAW,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AACzD,QAAMC,MAAM,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA1B;AACA,QAAMC,OAAO,GAAIC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,WAAlB,CAAD,GAAmCF,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,WAAlB,CAAnC,GAAoEF,IAAI,CAACC,KAAL,CAAWE,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApF;;AACA,MAAG,CAAAL,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEM,SAAT,MAAuB,OAA1B,EAAkC;AAChC,wBAAO,QAAC,KAAD,OAAWV,IAAX;AAAiB,MAAA,MAAM,EAAGW,KAAD,IAAahB,UAAU,OAAMM,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEW,eAAd,CAAX,gBAA6C,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,cAA7C,gBAAwE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA7G;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CARD;;GAAMd,W;UACWH,W;;;KADXG,W;AAUN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { isLoggedIn } from \"../../utils/helper\";\nimport NotFound from \"../../components/NotFound\";\nconst AdminRoutes = ({ component: Component, ...rest }) => {\n  const udData = useSelector(state => state.userLogin);\n  const uddDate = (JSON.parse(udData.userDetails)) ? JSON.parse(udData.userDetails) : JSON.parse(localStorage.getItem('userDetails')) ;\n  if(uddDate?.user_type === \"admin\"){\n    return <Route {...rest} render={(props) => ((isLoggedIn() || udData?.isAuthenticated) ?  <Component {...props} /> : <Redirect to=\"/login\" />)} />; \n  } else {\n    return <Redirect to=\"/asdasd\" />; \n  }\n};\n\nexport default AdminRoutes;"]},"metadata":{},"sourceType":"module"}