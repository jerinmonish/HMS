[{"/home/jerinmonish/Desktop/rs/react/hms/src/index.js":"1","/home/jerinmonish/Desktop/rs/react/hms/src/App.js":"2","/home/jerinmonish/Desktop/rs/react/hms/src/reportWebVitals.js":"3","/home/jerinmonish/Desktop/rs/react/hms/src/components/Home.js":"4","/home/jerinmonish/Desktop/rs/react/hms/src/components/Login.js":"5","/home/jerinmonish/Desktop/rs/react/hms/src/components/Register.js":"6","/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js":"7","/home/jerinmonish/Desktop/rs/react/hms/src/store.js":"8","/home/jerinmonish/Desktop/rs/react/hms/src/reducers/index.js":"9","/home/jerinmonish/Desktop/rs/react/hms/src/reducers/userRegister.js":"10","/home/jerinmonish/Desktop/rs/react/hms/src/actions/types.js":"11","/home/jerinmonish/Desktop/rs/react/hms/src/components/User/UserDashboard.js":"12","/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/AuthNavbar.js":"13","/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/AuthFooter.js":"14","/home/jerinmonish/Desktop/rs/react/hms/src/utils/helper.js":"15","/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/PrivateRoutes.js":"16","/home/jerinmonish/Desktop/rs/react/hms/src/components/User/Logout.js":"17","/home/jerinmonish/Desktop/rs/react/hms/src/reducers/userLogin.js":"18","/home/jerinmonish/Desktop/rs/react/hms/src/reducers/productsApi.js":"19","/home/jerinmonish/Desktop/rs/react/hms/src/actions/products.js":"20","/home/jerinmonish/Desktop/rs/react/hms/src/components/ProductByCategory.js":"21","/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/CLoader.js":"22","/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/CartData.js":"23","/home/jerinmonish/Desktop/rs/react/hms/src/components/ProductView.js":"24","/home/jerinmonish/Desktop/rs/react/hms/src/components/MyCart.js":"25","/home/jerinmonish/Desktop/rs/react/hms/src/components/CheckoutForm.js":"26","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Admindashboard.js":"27","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Layouts/AdminNavbar.js":"28","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Layouts/AdminFooter.js":"29","/home/jerinmonish/Desktop/rs/react/hms/src/components/NotFound.js":"30","/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/AdminRoutes.js":"31","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Products/ListProducts.js":"32","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Products/AddProduct.js":"33","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Products/FilterComponent.js":"34","/home/jerinmonish/Desktop/rs/react/hms/src/components/MyOrders.js":"35"},{"size":737,"mtime":1643182433617,"results":"36","hashOfConfig":"37"},{"size":3592,"mtime":1648834085516,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1638375399858,"results":"39","hashOfConfig":"37"},{"size":8430,"mtime":1640180130216,"results":"40","hashOfConfig":"37"},{"size":6816,"mtime":1652269929706,"results":"41","hashOfConfig":"37"},{"size":7052,"mtime":1639500005445,"results":"42","hashOfConfig":"37"},{"size":2655,"mtime":1643820674728,"results":"43","hashOfConfig":"37"},{"size":376,"mtime":1638531685685,"results":"44","hashOfConfig":"37"},{"size":243,"mtime":1640089169517,"results":"45","hashOfConfig":"37"},{"size":1235,"mtime":1639500178712,"results":"46","hashOfConfig":"37"},{"size":2081,"mtime":1648834983700,"results":"47","hashOfConfig":"37"},{"size":2369,"mtime":1641378738784,"results":"48","hashOfConfig":"37"},{"size":4905,"mtime":1648833960516,"results":"49","hashOfConfig":"37"},{"size":5354,"mtime":1641381996887,"results":"50","hashOfConfig":"37"},{"size":379,"mtime":1640109052472,"results":"51","hashOfConfig":"37"},{"size":900,"mtime":1645029379927,"results":"52","hashOfConfig":"37"},{"size":461,"mtime":1639140548130,"results":"53","hashOfConfig":"37"},{"size":1454,"mtime":1642609030175,"results":"54","hashOfConfig":"37"},{"size":4516,"mtime":1648834960396,"results":"55","hashOfConfig":"37"},{"size":7098,"mtime":1649092419467,"results":"56","hashOfConfig":"37"},{"size":3755,"mtime":1642610281279,"results":"57","hashOfConfig":"37"},{"size":819,"mtime":1640589375960,"results":"58","hashOfConfig":"37"},{"size":6086,"mtime":1641452406714,"results":"59","hashOfConfig":"37"},{"size":8589,"mtime":1642608761429,"results":"60","hashOfConfig":"37"},{"size":17803,"mtime":1648834218253,"results":"61","hashOfConfig":"37"},{"size":2621,"mtime":1641461769354,"results":"62","hashOfConfig":"63"},{"size":6643,"mtime":1644857723374,"results":"64","hashOfConfig":"37"},{"size":5577,"mtime":1646756575813,"results":"65","hashOfConfig":"37"},{"size":512,"mtime":1643818863238,"results":"66","hashOfConfig":"37"},{"size":216,"mtime":1643822052397,"results":"67","hashOfConfig":"37"},{"size":753,"mtime":1643824039711,"results":"68","hashOfConfig":"37"},{"size":5261,"mtime":1647449955488,"results":"69","hashOfConfig":"37"},{"size":9992,"mtime":1647361944332,"results":"70","hashOfConfig":"37"},{"size":1254,"mtime":1647450015373,"results":"71","hashOfConfig":"37"},{"size":3264,"mtime":1649092544034,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},"xszcmc",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"7nybc",{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"76"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"76"},"/home/jerinmonish/Desktop/rs/react/hms/src/index.js",["166","167","168"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\nimport { Provider, useSelector } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["169","170"],"/home/jerinmonish/Desktop/rs/react/hms/src/App.js",["171","172","173","174","175","176"],"import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { browserHistory } from 'react-router';\nimport { useSelector } from \"react-redux\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport AuthNavbar from \"./components/Layouts/AuthNavbar\";\nimport AuthFooter from \"./components/Layouts/AuthFooter\";\nimport UserDashboard from \"./components/User/UserDashboard\";\nimport Logout from \"./components/User/Logout\";\nimport ProductByCategory from \"./components/ProductByCategory\";\nimport ProductView from './components/ProductView';\nimport MyCart from \"./components/MyCart\";\nimport NotFound from \"./components/NotFound\";\nimport AdminNavbar from \"./components/admin/Layouts/AdminNavbar\";\nimport AdminFooter from \"./components/admin/Layouts/AdminFooter\";\nimport Admindashboard from \"./components/admin/Admindashboard\";\nimport ListProducts from \"./components/admin/Products/ListProducts\";\nimport AddProduct from \"./components/admin/Products/AddProduct\";\nimport { Redirect } from \"react-router-dom\";\nimport PrivateRoutes from \"./actions/routes/PrivateRoutes\";\nimport AdminRoutes from \"./actions/routes/AdminRoutes\";\nimport MyOrders from \"./components/MyOrders\";\n\nconst UnauthenticatedRoutes = () => {\n  return (\n     <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n     </Switch>\n  )\n}\n\nconst AuthenticatedRoutes = () => {\n  return (\n     <Switch>\n      <AuthNavbar />\n        <PrivateRoutes path=\"/user-dashboard\" component={UserDashboard} />\n        <PrivateRoutes path=\"/sign-out\" component={Logout} />\n        <PrivateRoutes path=\"/category-product/:id?\" component={ProductByCategory} />\n        <PrivateRoutes path=\"/view-product/:id?\" component={ProductView} />\n        <PrivateRoutes path=\"/my-cart\" component={MyCart} />\n      <AuthFooter />\n     </Switch>\n  )\n}\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        {/* <Route path='/404' component={NotFound} />\n        <Redirect from='*' to='/404' /> */}\n        <AdminRoutes path='/admin/:path?' exact>\n          <AdminNavbar className=\"bg-gray-100 font-sans leading-normal tracking-normal\"/>\n            <Switch>\n              <AdminRoutes path='/admin/dashboard' component={Admindashboard} />\n              <AdminRoutes path='/admin/product' component={ListProducts} />\n              <AdminRoutes path='/admin/add-product' component={AddProduct} />\n              {/* <Route component={NotFound}/> */}\n            </Switch>\n          <AdminFooter />\n        </AdminRoutes>\n        \n        <Route>\n          <AuthNavbar />\n            <Switch>\n              <PrivateRoutes path=\"/user-dashboard\" component={UserDashboard} />\n              <PrivateRoutes path=\"/my-orders\" component={MyOrders} />\n              <PrivateRoutes path=\"/sign-out\" component={Logout} />\n              <PrivateRoutes path=\"/category-product/:id?\" component={ProductByCategory} />\n              <PrivateRoutes path=\"/view-product/:id?\" component={ProductView} />\n              <PrivateRoutes path=\"/my-cart\" component={MyCart} />\n              <Route component={NotFound}/>\n            </Switch>\n          <AuthFooter />\n        </Route>\n\n      <Route component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/jerinmonish/Desktop/rs/react/hms/src/reportWebVitals.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/Home.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/Login.js",["177","178"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { userLoginProcess } from \"../actions/user\";\nimport * as constants from \"../actions/types\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { isLoggedIn } from './../utils/helper';\nimport { Redirect } from 'react-router';\n\nconst Login = (props) => {\n  const [formData,setFormData] = useState({\n    email:\"\",\n    password:\"\"\n  });\n\n  const {email,password} = formData;\n  const simpleValidator = useRef(new SimpleReactValidator({\n    className: 'text-danger',\n  }));\n  const [, forceUpdate] = useState();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData,[e.target.name]: e.target.value});\n  };\n  \n  const dispatch = useDispatch();\n  const { showToast } = useSelector(state => state.userRegister);\n  const userAuthData = useSelector(state => state.userLogin);\n  console.log(userAuthData);\n  useEffect(() => {\n  if(showToast){\n    toast.success(\"Registration Success !\", {\n      position: toast.POSITION.TOP_CENTER\n    });\n    dispatch({\n      type: constants.REGISTER_CLEAR\n    });\n  }\n  }, [dispatch, showToast]);\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const loginformValid = simpleValidator.current.allValid();\n    if (!loginformValid) {\n        simpleValidator.current.showMessages()\n        forceUpdate(1)\n    } else {\n        dispatch(userLoginProcess(formData));\n    }\n  }\n  const userTempData = (userAuthData) ? JSON.parse(userAuthData.userDetails) :  JSON.parse(localStorage.getItem('userDetails'));\n  if((isLoggedIn() || userAuthData?.isAuthenticated) && userTempData?.user_type == \"user\"){\n    return <Redirect to=\"/user-dashboard\" />;\n  } else if((isLoggedIn() || userAuthData?.isAuthenticated) && userTempData?.user_type == \"admin\"){\n    return <Redirect to=\"admin/dashboard\" />;\n  }\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex flex-col justify-center sm:py-12\">\n      <ToastContainer />\n      <div className=\"p-10 xs:p-0 mx-auto md:w-full md:max-w-md\">\n          <h1 className=\"font-bold text-center text-2xl mb-5\">DBC Login</h1>  \n          <div className=\"bg-white shadow w-full rounded-lg divide-y divide-gray-200\">\n            <form onSubmit={(e)=>handleLogin(e)}>\n              <div className=\"px-5 py-7\">\n                <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">E-mail</label>\n                <input type=\"text\" name=\"email\" value={email} onChange={(e)=>handleChange(e)} className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\" />\n                {simpleValidator.current.message('Email ', formData.email, 'required')}\n                <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">Password</label>\n                <input type=\"password\" name=\"password\" value={password} onChange={(e)=>handleChange(e)} className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\" />\n                {simpleValidator.current.message('Password ', formData.password, 'required')}\n                <button type=\"submit\" className=\"transition duration-200 bg-blue-500 hover:bg-blue-600 focus:bg-blue-700 focus:shadow-sm focus:ring-4 focus:ring-blue-500 focus:ring-opacity-50 text-white w-full py-2.5 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\">\n                    <span className=\"inline-block mr-2\">Login</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n                    </svg>\n                </button>\n              </div>\n            </form>\n            <div className=\"py-5\">\n              <div className=\"grid grid-cols-2 gap-1\">\n                <div className=\"text-center sm:text-left whitespace-nowrap\">\n                  <button className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-200 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block align-text-top\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z\" />\n                      </svg>\n                      <span className=\"inline-block ml-1\">Forgot Password</span>\n                  </button>\n                </div>\n                <div className=\"text-center sm:text-right  whitespace-nowrap\">\n                  <button className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-200 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block align-text-bottom\t\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z\" />\n                      </svg>\n                      <Link to=\"register\" className=\"inline-block ml-1\">Sign Up</Link>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"py-5\">\n              <div className=\"grid grid-cols-2 gap-1\">\n                <div className=\"text-center sm:text-left whitespace-nowrap\">\n                  <button className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-200 focus:outline-none focus:bg-gray-300 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block align-text-top\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                      </svg>\n                      <Link to=\"/\" className=\"inline-block ml-1\">Back to Home</Link>\n                  </button>\n                </div>\n              </div>\n            </div>\n      </div>\n    </div>\n  )\n}\nexport default Login","/home/jerinmonish/Desktop/rs/react/hms/src/components/Register.js",["179","180","181"],"import React, { useState,useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { userRegistration } from \"../actions/user\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Redirect } from 'react-router';\nimport { isLoggedIn } from './../utils/helper';\nconst Register = (props) => {\n  const [formData,setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password:\"\",\n    password_confirmation:\"\"\n  });\n\n  const {name, email,password, password_confirmation} = formData;\n\n  const simpleValidator = useRef(new SimpleReactValidator({\n      className: 'text-danger',\n    }));\n  const [, forceUpdate] = useState();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData,[e.target.name]: e.target.value});\n    // console.log(e.target.value);\n  };\n  const dispatch = useDispatch();\n  const { isLoading, success } = useSelector(state => state.userRegister);\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    const formValid = simpleValidator.current.allValid();\n    if (!formValid) {\n        simpleValidator.current.showMessages()\n        forceUpdate(1)\n    } else {\n        if(formData.password !== formData.password_confirmation){\n          alert(\"password and confirm password must be same\");\n        } else {\n          /*toast.success(\"Success Notification !\", {\n              position: toast.POSITION.TOP_RIGHT\n          });*/\n          dispatch(userRegistration(formData));\n          //return <Redirect to=\"/login\" />;\n        }\n    }\n  };\n  if(success && success == \"token generated\"){\n    return <Redirect to=\"/login\" />;\n  } else if(isLoggedIn() == true){\n    return <Redirect to=\"/user-dashboard\" />;\n  }\n  return (\n  <div className=\"p-10 xs:p-0 mx-auto md:w-full md:max-w-md\">\n    <ToastContainer />\n    <h1 className=\"font-bold text-center text-2xl mb-5\">DBC Register</h1>  \n    <div className=\"bg-white shadow w-full rounded-lg divide-y divide-gray-200\">\n      <div className=\"px-5 py-7\">\n        <form onSubmit={(e)=>handleRegister(e)}>\n          <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">Name</label>\n          <input type=\"text\" name=\"name\" value={name} onChange={(e)=>handleChange(e)} className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\" />\n          {simpleValidator.current.message('Name ', formData.name, 'required')}\n          <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">E-mail</label>\n          <input type=\"text\" name=\"email\" value={email} onChange={(e)=>handleChange(e)} className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\" />\n          {simpleValidator.current.message('Email ', formData.email, 'required|email')}\n          <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">Password</label>\n          <input type=\"password\" name=\"password\" value={password} onChange={(e)=>handleChange(e)} className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\" />\n          {simpleValidator.current.message('Password ', formData.password, 'required')}\n          <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">Confirm Password</label>\n          <input type=\"password\" name=\"password_confirmation\" value={password_confirmation} onChange={(e)=>handleChange(e)} className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\" />\n          {simpleValidator.current.message('Confirm Password ', formData.password_confirmation, 'required')}\n          <button type=\"submit\" className=\"transition duration-200 bg-blue-500 hover:bg-blue-600 focus:bg-blue-700 focus:shadow-sm focus:ring-4 focus:ring-blue-500 focus:ring-opacity-50 text-white w-full py-2.5 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\">\n              \n              <span className=\"inline-block mr-2\">{\n                isLoading ? 'Loading ...': 'Register'\n              }\n              </span>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n              </svg>\n          </button>\n        </form>\n      </div>\n      <div className=\"py-5\">\n        <div className=\"grid grid-cols-2 gap-1\">\n          <div className=\"text-center sm:text-left whitespace-nowrap\">\n            <button className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-200 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block align-text-top\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z\" />\n                </svg>\n                <span className=\"inline-block ml-1\">Forgot Password</span>\n            </button>\n          </div>\n          <div className=\"text-center sm:text-right  whitespace-nowrap\">\n            <button className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-200 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block align-text-bottom\t\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z\" />\n                </svg>\n                <Link to=\"login\" className=\"inline-block ml-1\">Sign In</Link>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"py-5\">\n        <div className=\"grid grid-cols-2 gap-1\">\n          <div className=\"text-center sm:text-left whitespace-nowrap\">\n            <button className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-200 focus:outline-none focus:bg-gray-300 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-4 h-4 inline-block align-text-top\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                </svg>\n                <Link to=\"/\" className=\"inline-block ml-1\">Back to Home</Link>\n            </button>\n          </div>\n        </div>\n      </div>\n  </div>\n  )\n}\nexport default Register","/home/jerinmonish/Desktop/rs/react/hms/src/actions/user.js",["182","183"],"import axios from \"axios\";\nimport * as constants from \"../actions/types\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Redirect } from 'react-router';\n\nvar headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n}\nexport const userRegistration = (rgData) => async (dispatch) => {\n  dispatch({\n    type: constants.REGISTER_REQUEST\n  });\n  try {\n    await axios.post('api/signup',rgData,{headers: headers})\n    .then((res)=>{\n      console.log(res);\n      dispatch({\n        type: constants.REGISTER_SUCCESS\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.REGISTER_ERROR\n    });\n    //console.log(error.response);\n    var tempErr = []\n    if(error.response?.data?.errors){\n      Object.keys(error.response.data.errors).forEach(function(vals) {\n         tempErr.push(error.response.data.errors[vals][0]);\n         toast.error(error.response.data.errors[vals][0], {\n          position: toast.POSITION.TOP_CENTER\n        });\n      });\n    }\n  }\n}\n\nexport const userLoginProcess = (lgData) => async (dispatch) => {\n  dispatch({\n    type: constants.LOGIN_REQUEST\n  });\n  try {\n    await axios.post('/api/signin',lgData,{headers: headers})\n    .then((lres)=>{\n      dispatch({\n        type: constants.LOGIN_SUCCESS,\n        returnLoginData:lres.data.token,\n        returnUserData:JSON.stringify(lres.data.user),\n      });\n      localStorage.setItem('user_token',lres.data.token);\n      localStorage.setItem(\"userDetails\", JSON.stringify({'name':lres.data.user.name,'email':lres.data.user.email,'id':lres.data.user.id,'user_type':lres.data.user.user_type}));\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.LOGIN_ERROR\n    });\n    toast.error(error?.response?.data?.message, {\n      position: toast.POSITION.TOP_CENTER\n    });\n  }\n}\n\nexport const userLogout = (history) => async (dispatch) => {\n  dispatch({\n    type: constants.LOGOUT_REQUEST\n  });\n  const tmpToken = localStorage.getItem('user_token');\n  const headers = {\n    'Accept': 'application/json',\n    'Authorization': `Bearer ${tmpToken}`\n  }\n\n  try {\n    await axios.post('/api/signout',{'Authorization':'Bearer '+tmpToken},{headers: headers})\n    .then((lgres)=> {\n      dispatch({\n        type: constants.LOGOUT_SUCCESS,\n      });\n      localStorage.removeItem('user_token');\n      localStorage.removeItem('userDetails');\n      history.push('/login');\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.LOGOUT_ERROR\n    });\n    console.log(error);\n    toast.error(error.repsonse.data.message, {\n      position: toast.POSITION.TOP_CENTER\n    });\n  }\n}","/home/jerinmonish/Desktop/rs/react/hms/src/store.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/reducers/index.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/reducers/userRegister.js",["184"],"import {\n  REGISTER_REQUEST,\n  REGISTER_ERROR,\n  REGISTER_SUCCESS,\n  REGISTER_CLEAR,\n  SHOW_TOAST,\n} from \"../actions/types\";\n\nconst initialState = {\n  isLoading:false,\n  isAuthenticated:false,\n  token:null,\n  error:\"\",\n  success:\"\",\n  showToast:false\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isAuthenticated:false,\n        success:\"\",\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated:false,\n        token:action.returnRegData,\n        success:\"token generated\",\n        showToast:true\n      };\n    case REGISTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated:false,\n        error:\"unable to register\",\n        success:\"\",\n      };\n    case REGISTER_CLEAR:\n      return {\n        ...state,\n        isLoading:false,\n        isAuthenticated:false,\n        token:null,\n        error:\"\",\n        success:\"\",\n        showToast:false\n      };\n    case SHOW_TOAST:\n      return {\n        ...state,\n        showToast: true,\n        success:\"\",\n      };\n    default:\n      return state;\n  }\n}\n","/home/jerinmonish/Desktop/rs/react/hms/src/actions/types.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/User/UserDashboard.js",["185","186","187","188","189","190","191"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isLoggedIn } from \"../../utils/helper\";\nimport { Redirect } from 'react-router';\nimport { listAllCategory } from \"../../actions/products\";\nimport * as constants from \"../../actions/types\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport CLoader from \"../Layouts/CLoader\";\n\nconst UserDashboard = (props) => {\n  const dispatch = useDispatch();\n  const catData = useSelector(state => state.productsApi);\n\n  const loginData = useSelector(state => state.userLogin);\n  \n  useEffect(()=>{\n      dispatch(listAllCategory(loginData.token))\n  },[]);\n\n  const pcategory = (catData?.categoryData?.data === undefined) ? [] : catData?.categoryData?.data;\n  return (\n    <div>\n      {\n        catData.isLoading == true ? <CLoader /> :\n        <div className=\"container w-full mx-auto my-16 text-center bg-white\">\n          <div className=\"bg-white\">\n            <div className=\"max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8\">\n              <h2 className=\"text-2xl font-extrabold tracking-tight text-gray-900 text-center\">Our Categories</h2>\n              <div className=\"mt-6 grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8\">\n                {pcategory && pcategory.map((pcategory) => (\n                  <div key={pcategory.id} className=\"group relative\">\n                    <div className=\"w-full min-h-80 bg-gray-200 aspect-w-1 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75 lg:h-80 lg:aspect-none\">\n                      <img src={pcategory.imageSrc} alt={pcategory.imageAlt} className=\"w-full h-full object-center object-cover lg:w-full lg:h-full\" />\n                    </div>\n                    <div className=\"mt-4\">\n                      <div>\n                        <h3 className=\"text-sm text-gray-700 text-center\">\n                        <Link to={`/category-product/${btoa(pcategory.id)}`}>\n                          <span aria-hidden=\"true\" className=\"absolute inset-0\"/> {pcategory.name}\n                        </Link>\n                        </h3>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default UserDashboard;\n","/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/AuthNavbar.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/AuthFooter.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/utils/helper.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/PrivateRoutes.js",["192"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { isLoggedIn } from \"../../utils/helper\";\n// import { userLoginProcess } from \"../../actions/user\";\nimport NotFound from \"../../components/NotFound\";\nconst PrivateRoutes = ({ component: Component, ...rest }) => {\n  // const { isAuthenticated/*, isLoading*/ } = useSelector(state => state.userLogin);\n  const udData = useSelector(state => state.userLogin);\n  const uddDate = (JSON.parse(udData.userDetails)) ? JSON.parse(udData.userDetails) : JSON.parse(localStorage.getItem('userDetails')) ;\n  if(uddDate?.user_type == \"user\"){\n    return <Route {...rest} render={(props) => ((isLoggedIn() || udData?.isAuthenticated) ?  <Component {...props} /> : <Redirect to=\"/login\" />)} />; \n  } else {\n    return <Route component={NotFound}/>; \n  }\n};\n\nexport default PrivateRoutes;","/home/jerinmonish/Desktop/rs/react/hms/src/components/User/Logout.js",["193","194","195"],"import React, { useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { userLogout } from \"../../actions/user\";\n\nconst Logout = () => {\n  const [formData,setFormData] = useState({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer '+ localStorage.getItem('user_token')\n    });\n\n  const dispatch = useDispatch();\n  dispatch(userLogout(formData));\n}\n\nexport default Logout","/home/jerinmonish/Desktop/rs/react/hms/src/reducers/userLogin.js",["196"],"import {\n  LOGIN_REQUEST,\n  LOGIN_ERROR,\n  LOGIN_SUCCESS,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_ERROR,\n} from \"../actions/types\";\n\nconst initialState = {\n  isLoading:false,\n  isAuthenticated:false,\n  token:null,\n  error:\"\",\n  success:\"\",\n  isLogout:false,\n  userDetails:null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isAuthenticated:false,\n        success:\"\",\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoading: true,\n        isAuthenticated:true,\n        token:action.returnLoginData,\n        userDetails:action.returnUserData,\n        success:\"login success\",\n      };\n    case LOGIN_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated:false,\n        error:\"login error\",\n        success:\"\",\n      };\n\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isAuthenticated:false,\n        success:\"\",\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated:false,\n        token:\"\",\n        success:\"\",\n        isLogout:true\n      };\n    case LOGOUT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated:false,\n        error:\"login error\",\n        success:\"\",\n      };\n    default:\n      return state;\n  }\n}\n","/home/jerinmonish/Desktop/rs/react/hms/src/reducers/productsApi.js",["197"],"import * as constants from \"../actions/types\";\n\nconst initialState = {\n  isLoading:false,\n  productsData:null,\n  vproductsData:null,\n  categoryData:null,\n  error:\"\",\n  success:\"\",\n  warningMsg:\"\",\n  isCartLoading:false,\n  cartData:null,\n  paymentData:null,\n  paymentLoading:false,\n  myOrderData:null\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case constants.PRODUCT_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        success:\"\",\n      };\n    case constants.PRODUCT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        categoryData:action.payload,\n        success:\"success\",\n      };\n    case constants.PRODUCT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        categoryData:null,\n        error:\"error\",\n      };\n    case constants.VIEW_PRODUCT_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        success:\"\",\n      };\n    case constants.VIEW_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        vproductsData:action.payload,\n        success:\"success\",\n      };\n    case constants.VIEW_PRODUCT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        vproductsData:null,\n        error:\"error\",\n      };\n    case constants.CAT_PRODUCT_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        success:\"\",\n      };\n    case constants.CAT_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        productsData:action.payload,\n        success:\"success\",\n      };\n    case constants.CAT_PRODUCT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        productsData:null,\n        error:\"error\",\n      };\n    case constants.CART_PRODUCT_REQUEST:\n      return {\n        ...state,\n        isCartLoading: true,\n        success:\"\",\n        warningMsg:\"\"\n      };\n    case constants.CART_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        isCartLoading: false,\n        success:\"success\",\n        warningMsg:action.payload\n      };\n    case constants.CART_PRODUCT_ERROR:\n      return {\n        ...state,\n        isCartLoading: false,\n        error:\"error\",\n        warningMsg:\"\"\n      };\n    case constants.VIEW_CART_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        success:\"\",\n        cartData:null\n      };\n    case constants.VIEW_CART_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        success:\"success\",\n        cartData:action.payload\n      };\n    case constants.VIEW_CART_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error:\"error\",\n        cartData:null\n      };\n    case constants.LIST_MY_ORDERS_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        success:\"\",\n        myOrderData:null\n      };\n    case constants.LIST_MY_ORDERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        success:\"success\",\n        myOrderData:action.payload\n      };\n    case constants.LIST_MY_ORDERS_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error:\"error\",\n        myOrderData:null\n      };\n    case constants.DELETE_CART_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        success:\"\",\n        cartData:null\n      };\n    case constants.DELETE_CART_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        success:\"success\",\n        cartData:action.payload\n      };\n    case constants.DELETE_CART_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error:\"error\",\n      };\n    case constants.PAYMENT_CARD_REQUEST:\n      return {\n        ...state,\n        paymentLoading: true,\n        success:\"\",\n        paymentData:null\n      };\n    case constants.PAYMENT_CARD_SUCCESS:\n      return {\n        ...state,\n        paymentLoading: false,\n        success:\"success\",\n        paymentData:action.payload\n      };\n    case constants.PAYMENT_CARD_ERROR:\n      return {\n        ...state,\n        paymentLoading: false,\n        error:\"error\",\n      };\n    case constants.ADD_PRODUCT_REQUEST:\n      return {\n        ...state,\n        adminAddProduct: true,\n      };\n    case constants.ADD_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        adminAddProduct: false,\n        success:\"success\",\n      };\n    case constants.ADD_PRODUCT_ERROR:\n      return {\n        ...state,\n        adminAddProduct: false,\n        error:\"error\",\n      };\n    default:\n      return state;\n  }\n}\n","/home/jerinmonish/Desktop/rs/react/hms/src/actions/products.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/ProductByCategory.js",["198","199","200","201"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {listCatByProduct} from \"../actions/products\";\nimport CLoader from \"./Layouts/CLoader\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport CartData from \"./Layouts/CartData\";\nimport { Link } from \"react-router-dom\";\n\nconst ProductByCategory = (props) => {\n  const dispatch = useDispatch();\n  const pData = useSelector(state => state.productsApi);\n  useEffect(()=>{\n    const fData = {\n      'id':atob(props?.match?.params?.id)\n    }\n    dispatch(listCatByProduct(fData));\n  },[]);\n\n  const changePage = (evt,val) => {\n    let fData = {\n      'id':atob(props?.match?.params?.id),\n      'selected':val\n    }\n    dispatch(listCatByProduct(fData));\n  }\n  const products = (pData?.productsData?.data?.data === undefined) ? [] : pData?.productsData?.data?.data;\n  \n  const [toggleModal, settoggleModal] = useState({'cartpp':false,'loadersamp':false,'pid':false});\n  const handleCart = (pid) => {\n    settoggleModal({'cartpp':true,'loadersamp':true,'pid':pid});\n  }\n\n  var addToCart = {\n    settoggleModal,\n    toggleModal\n  }\n  \n  return (\n    <div className=\"container mx-auto\" style={{marginTop:'20px'}}>\n      {(toggleModal.cartpp) && <CartData cartDetails={addToCart}/> }\n      {\n        pData.isLoading == true ? <CLoader /> :\n          <div className=\"p-10 grid grid-cols-1 sm:grid-cols-1 md:grid-cols-4 lg:grid-cols-4 xl:grid-cols-4 gap-4\">\n            {\n              (products?.length <= 0 || products?.length === undefined) ? <img src=\"https://i.pinimg.com/originals/c9/22/68/c92268d92cf2dbf96e3195683d9e14fb.png\"/>: \n                products.map((product ,i) => {\n                  return (\n                    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\" key={i}>\n                      <img className=\"w-full\" src={product?.pimage?.img} alt={product.pname} loading=\"lazy\"/>\n                      <div className=\"px-6 py-4\">\n                        <div className=\"font-bold text-xl mb-2\">\n                        <Link to={`/view-product/${btoa(product.id)}`}>{product.pname}</Link>\n                        </div>\n                        <p className=\"text-gray-700 text-base float-right\">Rs {product.p_amt} /-</p>\n                        <p className=\"text-gray-700 text-base float-left\">{product.pdesc} </p>\n                      </div>\n                      <div className=\"px-6 pt-4 pb-2\">\n                        <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">#photography</span>\n                        <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">#travel</span>\n                        <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">#winter</span>\n                      </div>\n                      <center>\n                        <button className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-indigo-100 transition-colors duration-150 bg-indigo-700 rounded-lg focus:shadow-outline hover:bg-indigo-800\" onClick={() => handleCart(product.id)}>Add to Cart</button>\n                      </center>\n\n                    </div>\n                  )\n                }\n                )\n            }\n      </div>\n    }\n      <div style={{display:'flex',alignItems: 'center',justifyContent: 'center',marginTop:'10px'}}>\n        <Pagination \n          count={pData?.productsData?.data?.last_page || 1} \n          page={pData?.productsData?.data?.current_page || 1} \n          onChange={changePage}\n          color=\"primary\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ProductByCategory;","/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/CLoader.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/Layouts/CartData.js",["202"],"import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {getAddCartData} from '../../actions/products';\n\nexport default function CartData(props) {\n  const {settoggleModal} = props.cartDetails;\n  const dispatch = useDispatch();\n  console.log(props.cartDetails.toggleModal.pid);\n\n  useEffect(()=>{\n    const product = {\n      'id':props.cartDetails.toggleModal.pid\n    }\n    dispatch(getAddCartData(product));\n  },[]);\n\n  return (\n    <>\n      <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\n          <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n          <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                  <svg className=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                  </svg>\n                </div>\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\n                    Cart Details\n                  </h3>\n                  <div className=\"mt-2\">\n                    <div className=\"mt-8\">\n                      <table className=\"min-w-full divide-y divide-gray-200\">\n                        <thead className=\"bg-gray-50\">\n                          <tr>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                              Product Name\n                            </th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                              Single Price\n                            </th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                              Quantity\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-200\">\n                          <tr>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"flex items-center\">\n                                <div className=\"flex-shrink-0 h-10 w-10\">\n                                  <img className=\"h-10 w-10 rounded-full\" src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60\" alt=\"\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                  <div className=\"text-sm font-medium text-gray-900\">Jane Cooper</div>\n                                  {/* <div className=\"text-sm text-gray-500\">jane.cooper@example.com</div> */}\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"text-sm text-gray-900\">400</div>\n                              {/* <div className=\"text-sm text-gray-500\">Optimization</div> */}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <select>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                                <option>7</option>\n                                <option>8</option>\n                                <option>9</option>\n                              </select>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse float-right\">\n              <button type=\"button\" className=\"inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                Place Order\n              </button>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <button type=\"button\" className=\"mt-3 inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\" onClick={() => settoggleModal(false)}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}","/home/jerinmonish/Desktop/rs/react/hms/src/components/ProductView.js",["203","204","205","206","207","208","209","210","211"],"import { Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {viewProduct} from './../actions/products';\nimport {addToCart} from './../actions/products';\nimport CLoader from \"./Layouts/CLoader\";\nimport {useHistory} from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CART_PRODUCT_ERROR } from \"../actions/types\";\nconst ProductView = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const product = useSelector(state => state.productsApi);\n  const [pquantity,setPquantity] = useState(1);\n  useEffect(()=>{\n    const pid = {\n      'id':atob(props?.match?.params?.id)\n    }\n    dispatch({\n      type: CART_PRODUCT_ERROR,\n      payload:null,\n      warningMsg:null\n    });\n    dispatch(viewProduct(pid));\n  },[]);\n  const productsDetails = product?.vproductsData?.data?.product;\n  const productImages = product?.vproductsData?.data?.product_images;\n  const handleQuantityCount = (evt) => {\n    if(pquantity > 0){\n      if(evt.target.name === \"increment\"){\n        setPquantity(pquantity+1);\n      } else if(evt.target.name === \"decrement\"){\n        if(pquantity !== 1){\n          setPquantity(pquantity-1);\n        }\n      }  \n    }\n  }\n  const sendCartDetails = async (evt,pid) => {\n    const ccdata = {\n      'qty': pquantity,\n      'pid': pid\n    }\n    dispatch(addToCart(ccdata));\n  }\n  \n  if(product?.warningMsg.length > 0 && product?.warningMsg == \"Added To Cart\"){\n    toast.success(product?.warningMsg + \" !\", {\n      position: toast.POSITION.TOP_RIGHT,\n      toastId: 'success1',\n    });\n  } else if (product?.warningMsg.length > 0 && product?.warningMsg == \"Already this product is present in you cart\"){\n    toast.error(product?.warningMsg + \" !\", {\n      position: toast.POSITION.TOP_RIGHT,\n      toastId: 'success2',\n    });\n  }\n\n  return (\n    <div>\n      {\n        product.isLoading == true ? <CLoader /> :\n        <div className=\"container px-5 py-24 mx-auto\">\n          <ToastContainer />\n          <div className=\"lg:w-4/5 mx-auto flex flex-wrap\">\n            <img alt=\"{productsDetails?.p_name}\" className=\"lg:w-1/2 w-full object-cover object-center rounded border border-gray-200\" src={(productImages) ? productImages[0]?.pimages : \"\"} />\n            <div className=\"lg:w-1/2 w-full lg:pl-10 lg:py-6 mt-6 lg:mt-0\">\n              <Button className=\"float-right\" variant=\"contained\" onClick={() => history.goBack()}>Back</Button>\n              <h2 className=\"text-sm title-font text-gray-500 tracking-widest\">DBC's Fast Food</h2>\n              <h1 className=\"text-gray-900 text-3xl title-font font-medium mb-1\">{productsDetails?.p_name}</h1>\n              <div className=\"flex mb-4\">\n                <span className=\"flex items-center\">\n                  <svg fill=\"currentColor\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-4 h-4 text-red-500\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n                  </svg>\n                  <svg fill=\"currentColor\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-4 h-4 text-red-500\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n                  </svg>\n                  <svg fill=\"currentColor\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-4 h-4 text-red-500\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n                  </svg>\n                  <svg fill=\"currentColor\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-4 h-4 text-red-500\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n                  </svg>\n                  <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-4 h-4 text-red-500\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n                  </svg>\n                  <span className=\"text-gray-600 ml-3\">4 Reviews</span>\n                </span>\n                <span className=\"flex ml-3 pl-3 py-2 border-l-2 border-gray-200\">\n                  <a className=\"text-gray-500\">\n                    <svg fill=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                      <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\"></path>\n                    </svg>\n                  </a>\n                  <a className=\"ml-2 text-gray-500\">\n                    <svg fill=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                      <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\"></path>\n                    </svg>\n                  </a>\n                  <a className=\"ml-2 text-gray-500\">\n                    <svg fill=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                      <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n                    </svg>\n                  </a>\n                </span>\n              </div>\n              <p className=\"leading-relaxed\">{productsDetails?.p_description}</p>\n              <div className=\"flex mt-6 items-center pb-5 border-b-2 border-gray-200 mb-5\">\n                <div className=\"flex\">\n                  <button name=\"decrement\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" onClick={(event)=>handleQuantityCount(event)}>-</button>&nbsp;&nbsp;\n                  <input type=\"text\" size={2} className=\"shadow appearance-none border border-red-500\" readOnly value={(productsDetails?.available == \"Active\") ? pquantity : 0} style={{textAlign:'center'}}/>&nbsp;&nbsp;\n                  <button name=\"increment\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" onClick={(event)=>handleQuantityCount(event)}>+</button>\n                </div>\n                <div className=\"flex ml-6 items-center\">\n                  {/* <span className=\"mr-3\">Size</span> */}\n                  <div className=\"relative\">\n                    {\n                      (product?.isCartLoading == false) ? \n                        <button className=\"flex ml-auto text-white bg-red-500 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded\" onClick={(event)=>sendCartDetails(event,productsDetails?.id)}>\n                          Add to Cart\n                        </button> : \n                        <button className=\"flex ml-auto text-white bg-orange-500 border-0 py-2 px-6 focus:outline-none hover:bg-orange-600 rounded\">\n                          Loading ...\n                        </button>\n                    }\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex\">\n                <span className=\"title-font font-medium text-2xl text-gray-900\">Rs {productsDetails?.p_amt}/-</span>\n                <button className=\"rounded-full w-10 h-10 bg-gray-200 p-0 border-0 inline-flex items-center justify-center text-gray-500 ml-4\" title=\"Add to Favourites\">\n                  <svg fill=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                    <path d=\"M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 00-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 000-7.78z\"></path>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProductView;","/home/jerinmonish/Desktop/rs/react/hms/src/components/MyCart.js",["212","213","214","215","216","217"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {getAllCart} from './../actions/products';\nimport CLoader from \"./Layouts/CLoader\";\nimport {deleteCartItem} from './../actions/products';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SimpleReactValidator from 'simple-react-validator';\nimport {paymentUsingCard} from './../actions/products';\nconst MyCart = () => {\n  const dispatch = useDispatch();\n  const [formData,setFormData] = useState({\n    mobileNo: \"\",\n    cardNo: \"\",\n    userName: \"\",\n    month: \"\",\n    year: \"\",\n    cvvNo: \"\",\n    address:\"\",\n    instructions:\"\"\n  });\n  \n  const simpleValidator = useRef(new SimpleReactValidator({\n    className: 'text-danger',\n  }));\n  const [, forceUpdate] = useState();\n\n  var yr = new Date().getFullYear();\n  const mnt = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const {mobileNo,cardNo,userName,month,year,cvvNo,address,instructions} = formData;\n  const product = useSelector(state => state.productsApi);\n  useEffect(()=>{\n    dispatch(getAllCart());\n  },[]);\n\n  useEffect(()=>{\n    if(product?.cartData?.status){\n      dispatch(getAllCart());\n      toast.success(\"Deleted from Cart\", {\n        position: toast.POSITION.TOP_RIGHT,\n        toastId: 'deletesuccess1',\n      });\n    } else {\n      toast.error(\"Unable to Delete Cart Item\", {\n        position: toast.POSITION.TOP_RIGHT,\n        toastId: 'deleteerror1',\n      });\n    }\n  },[product?.cartData?.status]);\n\n  useEffect(()=>{\n    if(product?.paymentData?.message == \"Payment Success\"){\n      alert(\"Payment Success\");\n    } else {\n      toast.error(product?.paymentData?.message, {\n        position: toast.POSITION.TOP_RIGHT,\n        toastId: 'paymentError1',\n      });\n    }\n  },[product?.paymentData?.message]);\n\n  const cart = (product?.cartData?.data === undefined) ? [] : product?.cartData?.data;\n\n  const handleRemoveCartItem = (pid) => {\n    const cid = {\n      'cid' : pid\n    }\n    dispatch(deleteCartItem(cid));\n  }\n\n  const handleChange = (e) => {\n    setFormData({...formData,[e.target.name]: e.target.value});\n  }\n  const handlePayment = (frm) => {\n    frm.preventDefault();\n    console.log(formData);\n    const frmPaymentSubmit = simpleValidator.current.allValid();\n    if(!frmPaymentSubmit) {\n      simpleValidator.current.showMessages()\n      forceUpdate(1)\n    } else {\n      dispatch(paymentUsingCard(formData));\n    }\n  }\n\n  return (\n    <>\n    {\n        (product.isLoading === true) ? <CLoader /> :\n\n        <div className=\"flex justify-center my-6\">\n          <ToastContainer />\n        <div className=\"flex flex-col w-full p-8 text-gray-800 bg-white shadow-lg pin-r pin-y md:w-4/5 lg:w-4/5\">\n          <h1 className=\"text-3xl md:text-4xl font-medium mb-2 text-center\">Cart Summary</h1>\n          <hr />\n          <div className=\"flex-1\">\n            <table className=\"w-full text-sm lg:text-base\" cellSpacing=\"0\">\n              <thead>\n                <tr className=\"h-12 uppercase\">\n                  <th className=\"hidden md:table-cell\"></th>\n                  <th className=\"text-left\">Product</th>\n                  <th className=\"lg:text-right text-left pl-5 lg:pl-0\">\n                    <span className=\"lg:hidden\" title=\"Quantity\">Qtd</span>\n                    <span className=\"hidden lg:inline\">Quantity</span>\n                  </th>\n                  <th className=\"hidden text-right md:table-cell\">Unit price</th>\n                  <th className=\"text-right\">Total price</th>\n                  <th className=\"text-right\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  cart && cart.map((cart ,i) => {\n                      return (\n                        <tr key={i}>\n                          <td className=\"hidden pb-4 md:table-cell\">\n                            <Link to={`/view-product/${btoa(cart.pid)}`}>\n                              <img src={cart.product_images.img} className=\"w-20 rounded\" alt=\"Thumbnail\" />\n                            </Link>\n                          </td>\n                          <td>\n                           <Link to={`/view-product/${btoa(cart.pid)}`}>\n                              <p className=\"mb-2 md:ml-4\">{cart.product_name}</p>\n                            </Link>\n                          </td>\n                          <td className=\"justify-center md:justify-end md:flex mt-6\">\n                            <div className=\"w-20 h-10\">\n                              <div className=\"relative flex flex-row w-full h-8\">\n                                <span className=\"text-sm lg:text-base font-medium\">\n                                  {cart.no_of_qty}\n                                </span>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"hidden text-right md:table-cell\">\n                            <span className=\"text-sm lg:text-base font-medium\">\n                              Rs {cart.single_price}/-\n                            </span>\n                          </td>\n                          <td className=\"text-right\">\n                            <span className=\"text-sm lg:text-base font-medium\">\n                              Rs {cart.sp_total_price}/-\n                            </span>\n                          </td>\n                          <td className=\"float-right\">\n                            <span title=\"Delete Item\" onClick={() => {if(window.confirm('Are you sure to delete this item from cart ?')){ handleRemoveCartItem(btoa(cart.id))};}}>\n                              <svg aria-hidden=\"true\" data-prefix=\"far\" data-icon=\"trash-alt\" className=\"w-4 text-red-600 hover:text-red-800\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M268 416h24a12 12 0 0012-12V188a12 12 0 00-12-12h-24a12 12 0 00-12 12v216a12 12 0 0012 12zM432 80h-82.41l-34-56.7A48 48 0 00274.41 0H173.59a48 48 0 00-41.16 23.3L98.41 80H16A16 16 0 000 96v16a16 16 0 0016 16h16v336a48 48 0 0048 48h288a48 48 0 0048-48V128h16a16 16 0 0016-16V96a16 16 0 00-16-16zM171.84 50.91A6 6 0 01177 48h94a6 6 0 015.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0012-12V188a12 12 0 00-12-12h-24a12 12 0 00-12 12v216a12 12 0 0012 12z\"/></svg>\n                            </span>\n                          </td>\n                        </tr>\n                      )\n                    }\n                  )\n                }\n              </tbody>\n            </table>\n            <hr className=\"pb-6 mt-6\" />\n            {\n              (cart?.length > 0) ? \n            <form onSubmit={(e)=>handlePayment(e)}>\n            <div className=\"my-4 mt-6 -mx-2 lg:flex\">\n              <div className=\"lg:px-2 lg:w-1/2\">\n                {/* <div className=\"p-4 bg-gray-100 rounded-full\">\n                  <h1 className=\"ml-2 font-bold uppercase\">Coupon Code</h1>\n                </div>\n                <div className=\"p-4\">\n                  <p className=\"mb-4 italic\">If you have a coupon code, please enter it in the box below</p>\n                  <div className=\"justify-center md:flex\">\n                    <form action=\"\" method=\"POST\">\n                        <div className=\"flex items-center w-full h-13 pl-3 bg-white bg-gray-100 border rounded-full\">\n                          <input type=\"coupon\" name=\"code\" id=\"coupon\" placeholder=\"Apply coupon\" defaultValue=\"90off\"\n                                  className=\"w-full bg-gray-100 outline-none appearance-none focus:outline-none active:outline-none\"/>\n                            <button type=\"submit\" className=\"text-sm flex items-center px-3 py-1 text-white bg-gray-800 rounded-full outline-none md:px-4 hover:bg-gray-700 focus:outline-none active:outline-none\">\n                              <svg aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"gift\" className=\"w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M32 448c0 17.7 14.3 32 32 32h160V320H32v128zm256 32h160c17.7 0 32-14.3 32-32V320H288v160zm192-320h-42.1c6.2-12.1 10.1-25.5 10.1-40 0-48.5-39.5-88-88-88-41.6 0-68.5 21.3-103 68.3-34.5-47-61.4-68.3-103-68.3-48.5 0-88 39.5-88 88 0 14.5 3.8 27.9 10.1 40H32c-17.7 0-32 14.3-32 32v80c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-80c0-17.7-14.3-32-32-32zm-326.1 0c-22.1 0-40-17.9-40-40s17.9-40 40-40c19.9 0 34.6 3.3 86.1 80h-86.1zm206.1 0h-86.1c51.4-76.5 65.7-80 86.1-80 22.1 0 40 17.9 40 40s-17.9 40-40 40z\"/></svg>\n                              <span className=\"font-medium\">Apply coupon</span>\n                            </button>\n                        </div>\n                    </form>\n                  </div>\n                </div> */}\n                <div className=\"p-4 mt-6 bg-gray-100 rounded-full\">\n                  <h1 className=\"ml-2 font-bold uppercase\">Instruction for seller</h1>\n                </div>\n                <div className=\"p-4\">\n                  <p className=\"mb-4 italic\">If you have some information for the seller you can leave them in the box below</p>\n                  <textarea name=\"instructions\" value={instructions} onChange={(e) => handleChange(e)} className=\"w-full h-24 p-2 bg-gray-100 rounded\"></textarea>\n                </div>\n              </div>\n              <div className=\"lg:px-2 lg:w-1/2\">\n                <div className=\"p-4 bg-gray-100 rounded-full\">\n                  <h1 className=\"ml-2 font-bold uppercase\">User &amp; Card Details</h1>\n                </div>\n                <div className=\"p-4\">\n                  <div className=\"relative pb-5\">\n                    <input type=\"text\" name=\"mobileNo\" className=\"border rounded h-10 w-full focus:outline-none focus:border-green-200 px-2 mt-2 text-sm\" placeholder=\"Mobile Number*\" value={mobileNo} onChange={(e)=>handleChange(e)}/>\n                    {simpleValidator.current.message('Mobile Number ', formData.mobileNo, 'required')}\n                  </div>\n                  <div className=\"relative pb-5\">\n                    <input type=\"text\" name=\"cardNo\" className=\"border rounded h-10 w-full focus:outline-none focus:border-green-200 px-2 mt-2 text-sm\" placeholder=\"Card Number*\" value={cardNo} onChange={(e)=>handleChange(e)}/>\n                    {simpleValidator.current.message('Card Number ', formData.cardNo, 'required')}\n                  </div>\n                  <div className=\"grid md:grid-cols-2 md:gap-2\">\n                    <input type=\"text\" name=\"userName\" className=\"border rounded h-10 w-full focus:outline-none focus:border-green-200 px-2 mt-2 text-sm\" placeholder=\"Name*\" value={userName} onChange={(e)=>handleChange(e)}/>\n                    {simpleValidator.current.message('Name ', formData.cardNo, 'required')}\n                    <select name=\"month\" className=\"border rounded h-10 w-full focus:outline-none focus:border-green-200 px-2 mt-2 text-sm\" onChange={(e)=>handleChange(e)}>\n                      <option value={\"\"}>Choose Month*</option>\n                      {mnt.map((item, key) => (\n                        <option key={key} value={key+1}>\n                          {item}\n                        </option>\n                      ))}\n                    </select>\n                    {simpleValidator.current.message('Expiry Month', formData.month, 'required')}\n                  </div>\n                  <div className=\"grid md:grid-cols-2 md:gap-2\">\n                    <select name=\"year\" className=\"border rounded h-10 w-full focus:outline-none focus:border-green-200 px-2 mt-2 text-sm\" onChange={(e)=>handleChange(e)}>\n                      <option alue={\"\"}>Choose Year*</option>\n                      {\n                       (\n                        Array.from( new Array(20), (v,i) =>\n                          <option key={i} value={yr+i}>{yr+i}</option>\n                        )\n                      )\n                     }\n                    </select>\n                    {simpleValidator.current.message('Expiry Year', formData.year, 'required')}\n                    <input type=\"text\" name=\"cvvNo\" className=\"border rounded h-10 w-full focus:outline-none focus:border-green-200 px-2 mt-2 text-sm\" placeholder=\"CVV*\" value={cvvNo} onChange={(e)=>handleChange(e)}/>\n                    {simpleValidator.current.message('CVV Number', formData.cvvNo, 'required')}\n                  </div>\n                  <div className=\"p-4\">\n                    <textarea className=\"w-full h-24 p-2 bg-gray-100 rounded\" name=\"address\" placeholder=\"Address To Deliver*\" value={address} onChange={(e)=>handleChange(e)}></textarea>\n                    {simpleValidator.current.message('Delivery Address', formData.address, 'required')}\n                  </div>\n                  \n                  {/* <p className=\"mb-6 italic\">Shipping and additionnal costs are calculated based on values you have entered</p> */}\n                    {/* <div className=\"flex justify-between border-b\">\n                      <div className=\"lg:px-4 lg:py-2 m-2 text-lg lg:text-xl font-bold text-center text-gray-800\">\n                        Subtotal\n                      </div>\n                      <div className=\"lg:px-4 lg:py-2 m-2 lg:text-lg font-bold text-center text-gray-900\">\n                        148,827.53€\n                      </div>\n                    </div>\n                      <div className=\"flex justify-between pt-4 border-b\">\n                        <div className=\"flex lg:px-4 lg:py-2 m-2 text-lg lg:text-xl font-bold text-gray-800\">\n                          <form action=\"\" method=\"POST\">\n                            <button type=\"submit\" className=\"mr-2 mt-1 lg:mt-2\">\n                              <svg aria-hidden=\"true\" data-prefix=\"far\" data-icon=\"trash-alt\" className=\"w-4 text-red-600 hover:text-red-800\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M268 416h24a12 12 0 0012-12V188a12 12 0 00-12-12h-24a12 12 0 00-12 12v216a12 12 0 0012 12zM432 80h-82.41l-34-56.7A48 48 0 00274.41 0H173.59a48 48 0 00-41.16 23.3L98.41 80H16A16 16 0 000 96v16a16 16 0 0016 16h16v336a48 48 0 0048 48h288a48 48 0 0048-48V128h16a16 16 0 0016-16V96a16 16 0 00-16-16zM171.84 50.91A6 6 0 01177 48h94a6 6 0 015.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0012-12V188a12 12 0 00-12-12h-24a12 12 0 00-12 12v216a12 12 0 0012 12z\"/></svg>\n                            </button>\n                          </form>\n                          Coupon \"90off\"\n                        </div>\n                        <div className=\"lg:px-4 lg:py-2 m-2 lg:text-lg font-bold text-center text-green-700\">\n                          -133,944.77€\n                        </div>\n                      </div>\n                      <div className=\"flex justify-between pt-4 border-b\">\n                        <div className=\"lg:px-4 lg:py-2 m-2 text-lg lg:text-xl font-bold text-center text-gray-800\">\n                          New Subtotal\n                        </div>\n                        <div className=\"lg:px-4 lg:py-2 m-2 lg:text-lg font-bold text-center text-gray-900\">\n                          14,882.75€\n                        </div>\n                      </div>\n                      <div className=\"flex justify-between pt-4 border-b\">\n                        <div className=\"lg:px-4 lg:py-2 m-2 text-lg lg:text-xl font-bold text-center text-gray-800\">\n                          Tax\n                        </div>\n                        <div className=\"lg:px-4 lg:py-2 m-2 lg:text-lg font-bold text-center text-gray-900\">\n                          2,976.55€\n                        </div>\n                      </div> */}\n                      <div className=\"flex justify-between pt-4 border-b\">\n                        <div className=\"lg:px-4 lg:py-2 m-2 text-lg lg:text-xl font-bold text-center text-gray-800\">\n                          Total\n                        </div>\n                        <div className=\"lg:px-4 lg:py-2 m-2 lg:text-lg font-bold text-center text-gray-900\">\n                         Rs {product?.cartData?.amt} /-\n                        </div>\n                      </div>\n                      {\n                        (product.paymentLoading === true) ? <iframe src=\"https://giphy.com/embed/3oEjI6SIIHBdRxXI40\" width=\"480\" height=\"480\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe> : \n                        <button type=\"submit\" className=\"flex justify-center w-full px-10 py-3 mt-6 font-medium text-white uppercase bg-gray-800 rounded-full shadow item-center hover:bg-gray-700 focus:shadow-outline focus:outline-none\">\n                        <svg aria-hidden=\"true\" data-prefix=\"far\" data-icon=\"credit-card\" className=\"w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M527.9 32H48.1C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48.1 48h479.8c26.6 0 48.1-21.5 48.1-48V80c0-26.5-21.5-48-48.1-48zM54.1 80h467.8c3.3 0 6 2.7 6 6v42H48.1V86c0-3.3 2.7-6 6-6zm467.8 352H54.1c-3.3 0-6-2.7-6-6V256h479.8v170c0 3.3-2.7 6-6 6zM192 332v40c0 6.6-5.4 12-12 12h-72c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12zm192 0v40c0 6.6-5.4 12-12 12H236c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12z\"/></svg>\n                        <span className=\"ml-2 mt-5px\">Pay</span>\n                      </button>\n                      }\n                </div>\n              </div>\n            </div>\n            </form>\n            : <h1 className=\"text-3xl md:text-4xl font-medium mb-2 text-center\">No Cart Data ...</h1>\n            }\n          </div>\n        </div>\n      </div>\n    }\n    </>\n  )\n}\n\nexport default MyCart","/home/jerinmonish/Desktop/rs/react/hms/src/components/CheckoutForm.js",[],["218","219"],"/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Admindashboard.js",["220","221","222","223","224"],"import React, { Fragment } from \"react\";\nimport { Menu, Transition } from '@headlessui/react'\nimport { Link } from \"react-router-dom\";\nimport 'font-awesome/css/font-awesome.min.css';\nconst Admindashboard = () => {\n  return (\n      <div className=\"container w-full mx-auto pt-20\">\n        <div className=\"w-full px-4 md:px-0 md:mt-8 mb-16 text-gray-800 leading-normal\">\n          <div className=\"flex flex-wrap\">\n            <div className=\"w-full md:w-1/2 xl:w-1/3 p-3\">\n              <div className=\"bg-white border rounded shadow p-2\">\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"flex-shrink pr-4\">\n                    <div className=\"rounded p-3 bg-green-600\"><i className=\"fa fa-wallet fa-2x fa-fw fa-inverse\"></i></div>\n                  </div>\n                  <div className=\"flex-1 text-right md:text-center\">\n                    <h5 className=\"font-bold uppercase text-gray-500\">Total Revenue</h5>\n                    <h3 className=\"font-bold text-3xl\">\n                      $3249 <span className=\"text-green-500\">\n                        \n                        <i className=\"fa fa-caret-up\"></i></span></h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full md:w-1/2 xl:w-1/3 p-3\">\n              <div className=\"bg-white border rounded shadow p-2\">\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"flex-shrink pr-4\">\n                    <div className=\"rounded p-3 bg-pink-600\"><i className=\"fa fa-users fa-2x fa-fw fa-inverse\"></i></div>\n                  </div>\n                  <div className=\"flex-1 text-right md:text-center\">\n                    <h5 className=\"font-bold uppercase text-gray-500\">Total Users</h5>\n                    <h3 className=\"font-bold text-3xl\">249 <span className=\"text-pink-500\"><i className=\"fa fa-exchange-alt\"></i></span></h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full md:w-1/2 xl:w-1/3 p-3\">\n              <div className=\"bg-white border rounded shadow p-2\">\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"flex-shrink pr-4\">\n                    <div className=\"rounded p-3 bg-yellow-600\"><i className=\"fa fa-user-plus fa-2x fa-fw fa-inverse\"></i></div>\n                  </div>\n                  <div className=\"flex-1 text-right md:text-center\">\n                    <h5 className=\"font-bold uppercase text-gray-500\">New Users</h5>\n                    <h3 className=\"font-bold text-3xl\">2 <span className=\"text-yellow-600\"><i className=\"fa fa-caret-up\"></i></span></h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full md:w-1/2 xl:w-1/3 p-3\">\n              <div className=\"bg-white border rounded shadow p-2\">\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"flex-shrink pr-4\">\n                    <div className=\"rounded p-3 bg-blue-600\"><i className=\"fa fa-server fa-2x fa-fw fa-inverse\"></i></div>\n                  </div>\n                  <div className=\"flex-1 text-right md:text-center\">\n                    <h5 className=\"font-bold uppercase text-gray-500\">Server Uptime</h5>\n                    <h3 className=\"font-bold text-3xl\">152 days</h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full md:w-1/2 xl:w-1/3 p-3\">\n              <div className=\"bg-white border rounded shadow p-2\">\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"flex-shrink pr-4\">\n                    <div className=\"rounded p-3 bg-indigo-600\"><i className=\"fa fa-tasks fa-2x fa-fw fa-inverse\"></i></div>\n                  </div>\n                  <div className=\"flex-1 text-right md:text-center\">\n                    <h5 className=\"font-bold uppercase text-gray-500\">To Do List</h5>\n                    <h3 className=\"font-bold text-3xl\">7 tasks</h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full md:w-1/2 xl:w-1/3 p-3\">\n              <div className=\"bg-white border rounded shadow p-2\">\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"flex-shrink pr-4\">\n                    <div className=\"rounded p-3 bg-red-600\"><i className=\"fa fa-inbox fa-2x fa-fw fa-inverse\"></i></div>\n                  </div>\n                  <div className=\"flex-1 text-right md:text-center\">\n                    <h5 className=\"font-bold uppercase text-gray-500\">Issues</h5>\n                    <h3 className=\"font-bold text-3xl\">3 <span className=\"text-red-500\"><i className=\"fa fa-caret-up\"></i></span></h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr className=\"border-b-2 border-gray-400 my-8 mx-4\" />\n          <div className=\"flex flex-row flex-wrap flex-grow mt-2\">\n            <div className=\"w-full p-3\">\n              <div className=\"bg-white border rounded shadow\">\n                <div className=\"border-b p-3\">\n                  <h5 className=\"font-bold uppercase text-gray-600\">Table</h5>\n                </div>\n                <div className=\"p-5\">\n                  <table className=\"w-full p-5 text-gray-700\">\n                    <thead>\n                      <tr>\n                        <th className=\"text-left text-blue-900\">Name</th>\n                        <th className=\"text-left text-blue-900\">Side</th>\n                        <th className=\"text-left text-blue-900\">Role</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Obi Wan Kenobi</td>\n                        <td>Light</td>\n                        <td>Jedi</td>\n                      </tr>\n                      <tr>\n                        <td>Greedo</td>\n                        <td>South</td>\n                        <td>Scumbag</td>\n                      </tr>\n                      <tr>\n                        <td>Darth Vader</td>\n                        <td>Dark</td>\n                        <td>Sith</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <p className=\"py-2\"><a href=\"#\">See More issues...</a></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\nexport default Admindashboard","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Layouts/AdminNavbar.js",["225","226","227","228","229","230"],"import React, { Fragment } from \"react\";\nimport { Menu, Transition } from '@headlessui/react'\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogout } from \"../../../actions/user\";\nimport { useHistory } from \"react-router-dom\";\nconst AdminNavbar = () => {\n  const dispatch = useDispatch();\n  const history  = useHistory();\n  const userDetails = useSelector(state => state.userLogin);\n  let uDetailsS = JSON.parse(userDetails?.userDetails);\n  let uDetailsL = JSON.parse(localStorage.getItem('userDetails'));\n  const handleLogout = () => {\n    dispatch(userLogout(history));\n  }\n  return (\n    <nav id=\"header\" className=\"bg-white fixed w-full z-10 top-0 shadow\">\n      <div className=\"w-full container mx-auto flex flex-wrap items-center mt-0 pt-3 pb-3 md:pb-0\">\n        <div className=\"w-1/2 pl-2 md:pl-0\">\n          <a className=\"text-gray-900 text-base xl:text-xl no-underline hover:no-underline font-bold\" href=\"#\">\n            <i className=\"fa fa-sun text-pink-600 pr-3\"></i> DBC Fast Food\n          </a>\n        </div>\n        <div className=\"w-1/2 pr-0\">\n          <div className=\"flex relative inline-block float-right\">\n            <div className=\"relative text-sm\">\n              <Menu as=\"div\" className=\"ml-3 relative\">\n                <div>\n                  <Menu.Button className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                    <span className=\"sr-only\">Open user menu</span>\n                    <img className=\"h-8 w-8 rounded-full\" src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\" />\n                  </Menu.Button>\n                </div>\n                <Transition\n                  as={Fragment}\n                  enter=\"transition ease-out duration-100\"\n                  enterFrom=\"transform opacity-0 scale-95\"\n                  enterTo=\"transform opacity-100 scale-100\"\n                  leave=\"transition ease-in duration-75\"\n                  leaveFrom=\"transform opacity-100 scale-100\"\n                  leaveTo=\"transform opacity-0 scale-95\"\n                >\n                  <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                    <Menu.Item>\n                      {({ active }) => (\n                        <Link to=\"/\" className=\"block px-4 py-2 text-sm text-gray-700\">John Doe  - Profile</Link>\n                      )}\n                    </Menu.Item>\n                    <Menu.Item>\n                      {({ active }) => (\n                        <Link to=\"/\" className=\"block px-4 py-2 text-sm text-gray-700\">Settings</Link>\n                      )}\n                    </Menu.Item>\n                    <Menu.Item>\n                      {({ active }) => (\n                        <button className=\"block px-4 py-2 text-sm text-gray-700\" onClick={handleLogout}>Sign Out</button>\n                      )}\n                    </Menu.Item>\n                  </Menu.Items>\n                </Transition>\n              </Menu>\n            </div>\n          </div>\n          </div>\n          <div className=\"w-full flex-grow lg:flex lg:items-center lg:w-auto hidden lg:block mt-2 lg:mt-0 bg-white z-20\" id=\"nav-content\">\n            <ul className=\"list-reset lg:flex flex-1 items-center px-4 md:px-0\">\n              <li className=\"mr-6 my-2 md:my-0\">\n                <Link to=\"/admin/dashboard\" className=\"block py-1 md:py-3 pl-1 align-middle text-pink-600 no-underline hover:text-gray-900 border-b-2 border-orange-600 hover:border-orange-600\">\n                  <i className=\"fa fa-home fa-fw mr-3 text-pink-600\"></i><span className=\"pb-1 md:pb-0 text-sm\">Home</span>\n                </Link>\n              </li>\n              <li className=\"mr-6 my-2 md:my-0\">\n                <Link to=\"/admin/product\" className=\"block py-1 md:py-3 pl-1 align-middle text-gray-500 no-underline hover:text-gray-900 border-b-2 border-white hover:border-pink-500\">\n                  <i className=\"fa fa-tasks fa-fw mr-3\"></i><span className=\"pb-1 md:pb-0 text-sm\">Products</span>\n                </Link>\n              </li>\n              <li className=\"mr-6 my-2 md:my-0\">\n                <a href=\"#\" className=\"block py-1 md:py-3 pl-1 align-middle text-gray-500 no-underline hover:text-gray-900 border-b-2 border-white hover:border-purple-500\">\n                  <i className=\"fa fa-envelope fa-fw mr-3\"></i><span className=\"pb-1 md:pb-0 text-sm\">Messages</span>\n                </a>\n              </li>\n              <li className=\"mr-6 my-2 md:my-0\">\n                <a href=\"#\" className=\"block py-1 md:py-3 pl-1 align-middle text-gray-500 no-underline hover:text-gray-900 border-b-2 border-white hover:border-green-500\">\n                  <i className=\"fa fa-chart fa-fw mr-3\"></i><span className=\"pb-1 md:pb-0 text-sm\">Analytics</span>\n                </a>\n              </li>\n              <li className=\"mr-6 my-2 md:my-0\">\n                <a href=\"#\" className=\"block py-1 md:py-3 pl-1 align-middle text-gray-500 no-underline hover:text-gray-900 border-b-2 border-white hover:border-red-500\">\n                  <i className=\"fa-solid fa-wallet fa-fw mr-3\"></i><span className=\"pb-1 md:pb-0 text-sm\">Payments</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n      </div>\n    </nav>\n  )\n}\nexport default AdminNavbar","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Layouts/AdminFooter.js",["231","232","233","234"],"import React, { Fragment } from \"react\";\nimport { Menu, Transition } from '@headlessui/react'\nimport { Link } from \"react-router-dom\";\nconst AdminFooter = () => {\n  return (\n    <footer className=\"text-center lg:text-left bg-gray-100 text-gray-600\">\n      <div className=\"text-center p-6 bg-gray-200\">\n        <span>© 2021 Copyright:</span>\n        <a className=\"text-gray-600 font-semibold\" href=\"https://tailwind-elements.com/\">Tailwind Elements</a>\n      </div>\n    </footer>\n  )\n}\nexport default AdminFooter","/home/jerinmonish/Desktop/rs/react/hms/src/components/NotFound.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/actions/routes/AdminRoutes.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Products/ListProducts.js",["235","236","237","238","239","240","241"],"import React, { useEffect, useState, useRef, Fragment, useMemo } from \"react\";\nimport { Menu, Transition } from '@headlessui/react'\nimport { Link } from \"react-router-dom\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from \"axios\";\nimport DataTable from 'react-data-table-component';\nimport FilterComponent from \"./FilterComponent\";\n\nconst ListProducts = () => {\n  \n  const [data, setData] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [totalRows, setTotalRows] = useState(0);\n\tconst [perPage, setPerPage] = useState(5);\n\tconst [paginationPerPage, setPaginationPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const tmpToken = localStorage.getItem('user_token');\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${tmpToken}`\n    }\n\tconst fetchUsers = async page => {\n\t\tsetLoading(true);\n    \n\t\tconst response = await axios.get(`http://127.0.0.1:8000/api/v1/list-products?page=${page}&per_page=${perPage}`,{headers: headers})\n    .then((response)=> {\n      // console.log(response.data);\n      setData(response.data.data);\n      setTotalRows(response.data.total);\n      setLoading(false);\n    });\n\t};\n\n\tconst handlePageChange = page => {\n\t\tfetchUsers(page);\n    setCurrentPage(page);\n\t};\n\n\tconst handlePerRowsChange = async (newPerPage, page) => {\n\t\tsetLoading(true);\n\n\t\tconst response = await axios.get(`http://127.0.0.1:8000/api/v1/list-products?page=${page}&per_page=${newPerPage}`,{headers: headers});\n\n\t\tsetData(response.data.data);\n\t\tsetPerPage(newPerPage);\n\t\tsetLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchUsers(1); // fetch page 1 of users\n\t\t\n\t}, []);\n  const handleButtonClick = () => {\n\t\t\n\t\tconsole.log('clicked');\n\t};\n  const columns = [\n    {\n      name: 'Product Name',\n      selector: row => row.p_name,\n      sortable: true,\n      // className:\"text-left text-blue-900\"\n    },\n    {\n      name: 'Status',\n      selector: row => row.available,\n      sortable: true,\n    },\n    {\n      name: 'Amount',\n      selector: row => row.p_amt,\n      sortable: true,\n    },\n    {\n      name: 'Action',\n      key: \"action\",\n      className: \"action\",\n      width: 100,\n      align: \"left\",\n      sortable: false,\n      cell: record => { \n          return (\n              <div>\n                  <button onClick={()=>handleButtonClick()} className=\"bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded\"><i className=\"fa fa-eye\"></i></button>&nbsp;&nbsp;\n                  <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i className=\"fa fa-edit\"></i></button>&nbsp;&nbsp;\n                  <button className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"><i className=\"fa fa-trash\"></i></button>\n              </div>\n          );\n      }\n    }\n];\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n\n  const subHeaderComponent = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n  return (\n      <FilterComponent\n        onFilter={e => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  const filteredItems = data.filter(\n    item => JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n  );\n  return (\n      <div className=\"container w-full mx-auto pt-20\">\n        <div className=\"w-full px-4 md:px-0 md:mt-8 mb-16 text-gray-800 leading-normal\">\n          <div className=\"flex flex-row flex-wrap flex-grow mt-2\">\n            <div className=\"w-full p-3\">\n              <div className=\"bg-white border rounded shadow\">\n                <div className=\"border-b p-3\">\n                  <h5 className=\"font-bold uppercase text-gray-600\">\n                    List Product\n                    <Link to={'/admin/add-product'} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded float-right\t\">Add Product</Link>\n                  </h5>\n                </div>\n                <div className=\"p-5\">\n                  <DataTable\n                    // title=\"Users\"\n                    columns={columns}\n                    data={filteredItems}\n                    progressPending={loading}\n                    pagination\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    paginationDefaultPage={currentPage}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    className=\"w-full p-5 text-gray-700\"\n                    paginationRowsPerPageOptions = {[5, 15, 20, 25, 30]}\n                    paginationPerPage={paginationPerPage}\n                    subHeader\n                    subHeaderComponent={subHeaderComponent}\n                  />\n                  {/* <p className=\"py-2\"><a href=\"#\">See More issues...</a></p> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\nexport default ListProducts","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Products/AddProduct.js",["242","243","244","245","246","247","248","249","250"],"import React, { useEffect, useState, useRef, Fragment } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Menu, Transition } from '@headlessui/react'\nimport { Link } from \"react-router-dom\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from \"axios\";\nimport DataTable from 'react-data-table-component';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { adminAddProduct, listAllCategory } from \"../../../actions/products\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from 'react-select';\n\n\nconst AddProduct = () => {\n  const dispatch = useDispatch()\n  const history  = useHistory();\n  const [imgSelected,setImgSelected] = useState([]);\n  const [catValue,setCatValue] = useState([]);\n  const pData = useSelector(state => state.productsApi);\n  \n  const formik = useFormik({\n     initialValues: {\n       p_name: '',\n       p_image_name:'',\n       p_description:'',\n       available:'',\n       p_amt:'',\n     },\n     validationSchema: Yup.object({\n      p_name: Yup.string().required('This field is required'),\n      cat_id: Yup.string().required('This field is required'),\n      p_image_name: Yup.array().min(1, 'This field is required'),\n      p_description: Yup.string().required('This field is required'),\n      p_amt: Yup.number().typeError('you must specify a number').min(0, 'Min value 0.').max(30, 'Max value 30.')//Yup.string().required('This field is required'),\n    }),\n     onSubmit: values => {\n          const formData = JSON.stringify({\n                params: { \n                  p_image_name: values.p_image_name,\n                  p_name: values.p_name,\n                  p_description: values.p_description,\n                  p_amt: values.p_amt,\n                  cat_id: values.cat_id,\n                  available:values.available,\n                } \n          });\n       dispatch(adminAddProduct(formData, history))\n     },\n   });\n\n   useEffect(() => {\n     //console.log(imgSelected);\n     formik.setFieldValue(\"p_image_name\",imgSelected);\n     dispatch(listAllCategory());\n   }, [imgSelected])\n   \n\n  const handleLogoChange = (i) => {\n    let files = i.target.files;\n    var file;\n    //loop through files\n    for (var i = 0; i < files.length; i++) {\n      // get item\n      file = files.item(i);\n      //or\n      file = files[i];\n      //alert(file.name);\n      let fileReader = new FileReader();\n      fileReader.readAsDataURL(files[i]);\n      fileReader.onload = (event) => {\n        setImgSelected(imgSelected => [...imgSelected,event.target.result]);\n      }\n    }\n  }\n\n  const handleCatChange = (e) => {\n    if(e?.value){\n      formik.setFieldValue('cat_id',e?.value);\n      setCatValue({value:e?.value,label:e?.label});\n    }\n  }\n\n  const handleAvailableChange = (e) => {\n    if(e?.target?.checked){\n      formik.setFieldValue('available','Active');\n    } else {\n      formik.setFieldValue('available','Inactive');\n    }\n  }\n\n  let catOptions = [];\n  pData?.categoryData?.data.map((user) => (\n    catOptions.push({value:user.id,label:user.name})\n  ))\n\n  return (\n      <div className=\"container w-full mx-auto pt-20\">\n        <div className=\"w-full px-4 md:px-0 md:mt-8 mb-16 text-gray-800 leading-normal\">\n          <div className=\"flex flex-row flex-wrap flex-grow mt-2\">\n            <div className=\"w-full p-3\">\n              <div className=\"bg-white border rounded shadow\">\n                <div className=\"border-b p-3\">\n                  <h5 className=\"font-bold uppercase text-gray-600\">\n                    Add Product\n                  </h5>\n                </div>\n                <div className=\"p-5\">\n                  <form className=\"w-full max-w-sm\" onSubmit={formik.handleSubmit}>\n                    <div className=\"md:flex md:items-center mb-6 grid grid-cols-4\">\n                      <div className=\"md:w-1/3\">\n                        <label className=\"block text-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" htmlFor=\"inline-full-name\">\n                          Product Name\n                        </label>\n                      </div>\n                      <div className=\"md:w-2/3\">\n                        <input className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" name=\"p_name\" id=\"inline-full-name\" type=\"text\" onChange={formik.handleChange} value={formik.values.p_name} onBlur={formik.handleBlur}/>\n                         {formik.touched.p_name && formik.errors.p_name ? <div className=\"text-red\">{formik.errors.p_name}</div> : null}\n                      </div>\n                    </div>\n                    <div className=\"md:flex md:items-center mb-6 grid grid-cols-4\">\n                      <div className=\"md:w-1/3\">\n                        <label className=\"block text-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" htmlFor=\"inline-full-name\">\n                          Category\n                        </label>\n                      </div>\n                      <div className=\"md:w-2/3\">\n                        <Select\n                          className=\"basic-single\"\n                          classNamePrefix=\"select\"\n                          placeholder={'Choose a Category'}\n                          defaultValue=''\n                          value={catValue}\n                          onChange={(e) => handleCatChange(e)}\n                          options={catOptions}\n                          name=\"cat_id\"\n                        />\n                        {formik.touched.cat_id && formik.errors.cat_id ? <div className=\"text-red\">{formik.errors.cat_id}</div> : null}\n                      </div>\n                    </div>\n                    <div className=\"md:flex md:items-center mb-6 grid grid-cols-4\">\n                      <div className=\"md:w-1/3\">\n                        <label className=\"block text-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" htmlFor=\"inline-full-name\">\n                          Product Image\n                        </label>\n                      </div>\n                      <div className=\"md:w-2/3\">\n                        <input className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" name=\"p_image_name\" id=\"inline-full-name\" type=\"file\" onChange={(event) => {handleLogoChange(event)}} multiple/>\n                         {formik.touched.p_image_name && formik.errors.p_image_name ? <div className=\"text-red\">{formik.errors.p_image_name}</div> : null}\n                      </div>\n                    </div>\n                    <div className=\"md:flex md:items-center mb-6 grid grid-cols-4\">\n                      <div className=\"md:w-1/3\">\n                        <label className=\"block text-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" htmlFor=\"inline-full-name\">\n                          Product Description\n                        </label>\n                      </div>\n                      <div className=\"md:w-2/3\">\n                        <textarea className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" name=\"p_description\" id=\"inline-full-name\" onChange={formik.handleChange} value={formik.values.p_description} onBlur={formik.handleBlur}/>\n                         {formik.touched.p_description && formik.errors.p_description ? <div className=\"text-red\">{formik.errors.p_description}</div> : null}\n                      </div>\n                    </div>\n                     <div className=\"md:flex md:items-center mb-6 grid grid-cols-4\">\n                      <div className=\"md:w-1/3\">\n                        <label className=\"block text-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" htmlFor=\"inline-full-name\">\n                          Product Price\n                        </label>\n                      </div>\n                      <div className=\"md:w-2/3\">\n                        <input className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" name=\"p_amt\" id=\"inline-full-name\" type=\"text\" onChange={formik.handleChange} value={formik.values.p_amt} onBlur={formik.handleBlur}/>\n                         {formik.touched.p_amt && formik.errors.p_amt ? <div className=\"text-red\">{formik.errors.p_amt}</div> : null}\n                      </div>\n                    </div>\n                    <div className=\"md:flex md:items-center mb-6\">\n                      <div className=\"md:w-1/3\"></div>\n                      <label className=\"md:w-2/3 block text-gray-500 font-bold\">\n                        <input className=\"mr-2 leading-tight\" type=\"checkbox\" name=\"available\" onChange={(e)=>handleAvailableChange(e)}/>\n                        <span className=\"text-sm\">\n                        Product Available\n                        </span>\n                      </label>\n                    </div>\n                    <div className=\"md:flex md:items-center\">\n                      <div className=\"md:w-1/3\"></div>\n                      <div className=\"md:w-2/3\">\n                        <button className=\"shadow bg-blue-500 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\" type=\"submit\">Submit</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                        <Link to={'/admin/product'}className=\"shadow bg-red-500 hover:bg-red-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\" type=\"button\">Cancel</Link>\n                      </div>\n                    </div>\n                  </form>\n                  {/* <p className=\"py-2\"><a href=\"#\">See More issues...</a></p> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\nexport default AddProduct","/home/jerinmonish/Desktop/rs/react/hms/src/components/admin/Products/FilterComponent.js",[],"/home/jerinmonish/Desktop/rs/react/hms/src/components/MyOrders.js",["251","252","253","254","255","256"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {getMyOrders} from './../actions/products';\nimport CLoader from \"./Layouts/CLoader\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst MyOrders = () => {\n  const dispatch = useDispatch();\n  const OrderData = useSelector(state => state.productsApi);\n\n  const changePage = (evt,val) => {\n    let fData = {\n      'selected':val\n    }\n    dispatch(getMyOrders(fData));\n  }\n\n  const products = (OrderData?.myOrderData?.data?.data === undefined) ? [] : OrderData?.myOrderData?.data?.data;\n  useEffect(()=>{\n    dispatch(getMyOrders());\n  },[]);\n  return (\n  <>\n  <div className=\"container mx-auto\" style={{marginTop:'20px'}}>\n    {\n      (products.isLoading === true) ? <CLoader /> :\n        <div className=\"p-10 grid grid-cols-1 sm:grid-cols-1 md:grid-cols-4 lg:grid-cols-4 xl:grid-cols-4 gap-4\">\n          {\n            (products?.length <= 0 || products?.length === undefined) ? <img src=\"https://i.pinimg.com/originals/c9/22/68/c92268d92cf2dbf96e3195683d9e14fb.png\"/>: \n              products.map((product ,i) => {\n                return (\n                  <div className=\"max-w-sm rounded overflow-hidden shadow-lg\" key={i}>\n                    <img className=\"w-full\" src={product.product_images.img} alt=\"\" loading=\"lazy\"/>\n                    <div className=\"px-6 py-4\">\n                      <div className=\"font-bold text-xl mb-2\">\n                        <Link to={`/view-product/${btoa(product.pid)}`}>{product.product_name}</Link>\n                      </div>\n                      <p className=\"text-gray-700 text-base float-right\">Rs {product.single_price} /-</p>\n                    </div>\n                    <div className=\"px-6 pt-4 pb-2\">\n                      <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\" title=\"No Of Quantities\">#{product.no_of_qty}</span>\n                      <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\" title=\"Total Price\">#{product.sp_total_price}</span>\n                      <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\" title=\"Ordered On\">#{product.ordered_at}</span>\n                    </div>\n                    <center>\n                      <button className=\"inline-flex items-center h-8 px-4 m-2 text-sm text-indigo-100 transition-colors duration-150 bg-indigo-700 rounded-lg focus:shadow-outline hover:bg-indigo-800\">Re-Order</button>\n                    </center>\n                  </div>\n                  )\n              })\n          }\n        </div>\n    }\n    <div style={{display:'flex',alignItems: 'center',justifyContent: 'center',marginTop:'10px'}}>\n        <Pagination \n          count={OrderData?.myOrderData?.data?.last_page || 1} \n          page={OrderData?.myOrderData?.data?.current_page || 1} \n          onChange={changePage}\n          color=\"primary\"\n        />\n      </div>\n  </div>\n  </>\n  )\n}\n\nexport default MyOrders",{"ruleId":"257","severity":1,"message":"258","line":3,"column":35,"nodeType":"259","messageId":"260","endLine":3,"endColumn":40},{"ruleId":"257","severity":1,"message":"261","line":3,"column":42,"nodeType":"259","messageId":"260","endLine":3,"endColumn":48},{"ruleId":"257","severity":1,"message":"262","line":8,"column":20,"nodeType":"259","messageId":"260","endLine":8,"endColumn":31},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"257","severity":1,"message":"267","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"268","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":24},{"ruleId":"257","severity":1,"message":"262","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":21},{"ruleId":"257","severity":1,"message":"269","line":21,"column":10,"nodeType":"259","messageId":"260","endLine":21,"endColumn":18},{"ruleId":"257","severity":1,"message":"270","line":26,"column":7,"nodeType":"259","messageId":"260","endLine":26,"endColumn":28},{"ruleId":"257","severity":1,"message":"271","line":36,"column":7,"nodeType":"259","messageId":"260","endLine":36,"endColumn":26},{"ruleId":"272","severity":1,"message":"273","line":54,"column":81,"nodeType":"274","messageId":"275","endLine":54,"endColumn":83},{"ruleId":"272","severity":1,"message":"273","line":56,"column":88,"nodeType":"274","messageId":"275","endLine":56,"endColumn":90},{"ruleId":"257","severity":1,"message":"276","line":6,"column":26,"nodeType":"259","messageId":"260","endLine":6,"endColumn":31},{"ruleId":"272","severity":1,"message":"273","line":50,"column":25,"nodeType":"274","messageId":"275","endLine":50,"endColumn":27},{"ruleId":"272","severity":1,"message":"273","line":52,"column":26,"nodeType":"274","messageId":"275","endLine":52,"endColumn":28},{"ruleId":"257","severity":1,"message":"277","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":24},{"ruleId":"257","severity":1,"message":"269","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":18,"column":1,"nodeType":"280","endLine":63,"endColumn":2},{"ruleId":"257","severity":1,"message":"281","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"282","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":44},{"ruleId":"257","severity":1,"message":"283","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":20},{"ruleId":"257","severity":1,"message":"269","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":18},{"ruleId":"257","severity":1,"message":"284","line":6,"column":13,"nodeType":"259","messageId":"260","endLine":6,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":18,"column":5,"nodeType":"287","endLine":18,"endColumn":7,"suggestions":"288"},{"ruleId":"272","severity":1,"message":"273","line":24,"column":27,"nodeType":"274","messageId":"275","endLine":24,"endColumn":29},{"ruleId":"272","severity":1,"message":"273","line":11,"column":25,"nodeType":"274","messageId":"275","endLine":11,"endColumn":27},{"ruleId":"257","severity":1,"message":"289","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":13},{"ruleId":"257","severity":1,"message":"262","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":21},{"ruleId":"257","severity":1,"message":"290","line":6,"column":19,"nodeType":"259","messageId":"260","endLine":6,"endColumn":30},{"ruleId":"278","severity":1,"message":"279","line":20,"column":1,"nodeType":"280","endLine":74,"endColumn":2},{"ruleId":"278","severity":1,"message":"279","line":18,"column":1,"nodeType":"280","endLine":203,"endColumn":2},{"ruleId":"257","severity":1,"message":"282","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":44},{"ruleId":"285","severity":1,"message":"291","line":17,"column":5,"nodeType":"287","endLine":17,"endColumn":7,"suggestions":"292"},{"ruleId":"272","severity":1,"message":"273","line":42,"column":25,"nodeType":"274","messageId":"275","endLine":42,"endColumn":27},{"ruleId":"293","severity":1,"message":"294","line":45,"column":75,"nodeType":"295","endLine":45,"endColumn":164},{"ruleId":"285","severity":1,"message":"296","line":15,"column":5,"nodeType":"287","endLine":15,"endColumn":7,"suggestions":"297"},{"ruleId":"285","severity":1,"message":"291","line":26,"column":5,"nodeType":"287","endLine":26,"endColumn":7,"suggestions":"298"},{"ruleId":"272","severity":1,"message":"273","line":48,"column":60,"nodeType":"274","messageId":"275","endLine":48,"endColumn":62},{"ruleId":"272","severity":1,"message":"273","line":53,"column":68,"nodeType":"274","messageId":"275","endLine":53,"endColumn":70},{"ruleId":"272","severity":1,"message":"273","line":63,"column":27,"nodeType":"274","messageId":"275","endLine":63,"endColumn":29},{"ruleId":"299","severity":1,"message":"300","line":92,"column":19,"nodeType":"295","endLine":92,"endColumn":48},{"ruleId":"299","severity":1,"message":"300","line":97,"column":19,"nodeType":"295","endLine":97,"endColumn":53},{"ruleId":"299","severity":1,"message":"300","line":102,"column":19,"nodeType":"295","endLine":102,"endColumn":53},{"ruleId":"272","severity":1,"message":"273","line":113,"column":148,"nodeType":"274","messageId":"275","endLine":113,"endColumn":150},{"ruleId":"272","severity":1,"message":"273","line":120,"column":47,"nodeType":"274","messageId":"275","endLine":120,"endColumn":49},{"ruleId":"257","severity":1,"message":"301","line":31,"column":35,"nodeType":"259","messageId":"260","endLine":31,"endColumn":40},{"ruleId":"257","severity":1,"message":"302","line":31,"column":41,"nodeType":"259","messageId":"260","endLine":31,"endColumn":45},{"ruleId":"285","severity":1,"message":"303","line":35,"column":5,"nodeType":"287","endLine":35,"endColumn":7,"suggestions":"304"},{"ruleId":"285","severity":1,"message":"303","line":50,"column":5,"nodeType":"287","endLine":50,"endColumn":32,"suggestions":"305"},{"ruleId":"272","severity":1,"message":"273","line":53,"column":38,"nodeType":"274","messageId":"275","endLine":53,"endColumn":40},{"ruleId":"306","severity":1,"message":"307","line":283,"column":61,"nodeType":"295","endLine":283,"endColumn":199},{"ruleId":"263","replacedBy":"308"},{"ruleId":"265","replacedBy":"309"},{"ruleId":"257","severity":1,"message":"267","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"310","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"311","line":2,"column":16,"nodeType":"259","messageId":"260","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"312","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":14},{"ruleId":"299","severity":1,"message":"313","line":126,"column":39,"nodeType":"295","endLine":126,"endColumn":51},{"ruleId":"257","severity":1,"message":"314","line":11,"column":7,"nodeType":"259","messageId":"260","endLine":11,"endColumn":16},{"ruleId":"257","severity":1,"message":"315","line":12,"column":7,"nodeType":"259","messageId":"260","endLine":12,"endColumn":16},{"ruleId":"299","severity":1,"message":"313","line":20,"column":11,"nodeType":"295","endLine":20,"endColumn":112},{"ruleId":"299","severity":1,"message":"313","line":78,"column":17,"nodeType":"295","endLine":78,"endColumn":173},{"ruleId":"299","severity":1,"message":"313","line":83,"column":17,"nodeType":"295","endLine":83,"endColumn":172},{"ruleId":"299","severity":1,"message":"313","line":88,"column":17,"nodeType":"295","endLine":88,"endColumn":170},{"ruleId":"257","severity":1,"message":"267","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"310","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"311","line":2,"column":16,"nodeType":"259","messageId":"260","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"312","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":14},{"ruleId":"257","severity":1,"message":"282","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":44},{"ruleId":"257","severity":1,"message":"267","line":1,"column":46,"nodeType":"259","messageId":"260","endLine":1,"endColumn":54},{"ruleId":"257","severity":1,"message":"310","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"311","line":2,"column":16,"nodeType":"259","messageId":"260","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"316","line":15,"column":28,"nodeType":"259","messageId":"260","endLine":15,"endColumn":48},{"ruleId":"257","severity":1,"message":"317","line":25,"column":9,"nodeType":"259","messageId":"260","endLine":25,"endColumn":17},{"ruleId":"285","severity":1,"message":"318","line":52,"column":5,"nodeType":"287","endLine":52,"endColumn":7,"suggestions":"319"},{"ruleId":"257","severity":1,"message":"282","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":44},{"ruleId":"257","severity":1,"message":"267","line":1,"column":46,"nodeType":"259","messageId":"260","endLine":1,"endColumn":54},{"ruleId":"257","severity":1,"message":"310","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":14},{"ruleId":"257","severity":1,"message":"311","line":3,"column":16,"nodeType":"259","messageId":"260","endLine":3,"endColumn":26},{"ruleId":"257","severity":1,"message":"320","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":13},{"ruleId":"257","severity":1,"message":"321","line":7,"column":8,"nodeType":"259","messageId":"260","endLine":7,"endColumn":17},{"ruleId":"285","severity":1,"message":"322","line":56,"column":7,"nodeType":"287","endLine":56,"endColumn":20,"suggestions":"323"},{"ruleId":"324","severity":1,"message":"325","line":63,"column":14,"nodeType":"259","messageId":"326","endLine":63,"endColumn":15},{"ruleId":"257","severity":1,"message":"327","line":67,"column":7,"nodeType":"259","messageId":"260","endLine":67,"endColumn":11},{"ruleId":"257","severity":1,"message":"281","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"282","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":44},{"ruleId":"257","severity":1,"message":"277","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":24},{"ruleId":"257","severity":1,"message":"276","line":6,"column":26,"nodeType":"259","messageId":"260","endLine":6,"endColumn":31},{"ruleId":"285","severity":1,"message":"303","line":24,"column":5,"nodeType":"287","endLine":24,"endColumn":7,"suggestions":"328"},{"ruleId":"293","severity":1,"message":"294","line":32,"column":73,"nodeType":"295","endLine":32,"endColumn":162},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["329"],"no-negated-in-lhs",["330"],"'Fragment' is defined but never used.","'browserHistory' is defined but never used.","'Redirect' is defined but never used.","'UnauthenticatedRoutes' is assigned a value but never used.","'AuthenticatedRoutes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'toast' is defined but never used.","'ToastContainer' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useState' is defined but never used.","'useRef' is defined but never used.","'isLoggedIn' is defined but never used.","'constants' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'loginData.token'. Either include them or remove the dependency array.","ArrayExpression",["331"],"'React' is defined but never used.","'setFormData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props?.match?.params?.id'. Either include them or remove the dependency array.",["332"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'props.cartDetails.toggleModal.pid'. Either include them or remove the dependency array.",["333"],["334"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'month' is assigned a value but never used.","'year' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["335"],["336"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["329"],["330"],"'Menu' is defined but never used.","'Transition' is defined but never used.","'Link' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'uDetailsS' is assigned a value but never used.","'uDetailsL' is assigned a value but never used.","'setPaginationPerPage' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["337"],"'axios' is defined but never used.","'DataTable' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'formik'. Either include them or remove the dependency array.",["338"],"no-redeclare","'i' is already defined.","redeclared","'file' is assigned a value but never used.",["339"],"no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"342","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"347","fix":"355"},"Update the dependencies array to be: [dispatch, loginData.token]",{"range":"356","text":"357"},"Update the dependencies array to be: [dispatch, props?.match?.params?.id]",{"range":"358","text":"359"},"Update the dependencies array to be: [dispatch, props.cartDetails.toggleModal.pid]",{"range":"360","text":"361"},{"range":"362","text":"359"},"Update the dependencies array to be: [dispatch]",{"range":"363","text":"364"},"Update the dependencies array to be: [dispatch, product?.cartData?.status]",{"range":"365","text":"366"},"Update the dependencies array to be: [fetchUsers]",{"range":"367","text":"368"},"Update the dependencies array to be: [dispatch, formik, imgSelected]",{"range":"369","text":"370"},{"range":"371","text":"364"},[659,661],"[dispatch, loginData.token]",[608,610],"[dispatch, props?.match?.params?.id]",[448,450],"[dispatch, props.cartDetails.toggleModal.pid]",[919,921],[1267,1269],"[dispatch]",[1648,1675],"[dispatch, product?.cartData?.status]",[1668,1670],"[fetchUsers]",[2082,2095],"[dispatch, formik, imgSelected]",[812,814]]